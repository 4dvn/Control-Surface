Start testing: Jul 18 23:02 CEST
----------------------------------------------------------
1/73 Testing: Button.construct
1/73 Test: Button.construct
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Button.construct" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Button.construct" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Button.construct
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.construct
[       OK ] Button.construct (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.construct" end time: Jul 18 23:02 CEST
"Button.construct" time elapsed: 00:00:00
----------------------------------------------------------

2/73 Testing: Button.released
2/73 Test: Button.released
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Button.released" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Button.released" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Button.released
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.released
[       OK ] Button.released (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.released" end time: Jul 18 23:02 CEST
"Button.released" time elapsed: 00:00:00
----------------------------------------------------------

3/73 Testing: Button.falling
3/73 Test: Button.falling
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Button.falling" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Button.falling" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Button.falling
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.falling
[       OK ] Button.falling (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.falling" end time: Jul 18 23:02 CEST
"Button.falling" time elapsed: 00:00:00
----------------------------------------------------------

4/73 Testing: Button.pressed
4/73 Test: Button.pressed
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Button.pressed" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Button.pressed" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Button.pressed
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.pressed
[       OK ] Button.pressed (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.pressed" end time: Jul 18 23:02 CEST
"Button.pressed" time elapsed: 00:00:00
----------------------------------------------------------

5/73 Testing: Button.rising
5/73 Test: Button.rising
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Button.rising" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Button.rising" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Button.rising
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.rising
[       OK ] Button.rising (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.rising" end time: Jul 18 23:02 CEST
"Button.rising" time elapsed: 00:00:00
----------------------------------------------------------

6/73 Testing: Button.debouncePressed
6/73 Test: Button.debouncePressed
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Button.debouncePressed" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Button.debouncePressed" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Button.debouncePressed
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.debouncePressed
[       OK ] Button.debouncePressed (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.debouncePressed" end time: Jul 18 23:02 CEST
"Button.debouncePressed" time elapsed: 00:00:00
----------------------------------------------------------

7/73 Testing: Button.debounceReleased
7/73 Test: Button.debounceReleased
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Button.debounceReleased" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Button.debounceReleased" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Button.debounceReleased
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.debounceReleased
[       OK ] Button.debounceReleased (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.debounceReleased" end time: Jul 18 23:02 CEST
"Button.debounceReleased" time elapsed: 00:00:00
----------------------------------------------------------

8/73 Testing: BitArray.construct
8/73 Test: BitArray.construct
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=BitArray.construct" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"BitArray.construct" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = BitArray.construct
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BitArray
[ RUN      ] BitArray.construct
[       OK ] BitArray.construct (0 ms)
[----------] 1 test from BitArray (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BitArray.construct" end time: Jul 18 23:02 CEST
"BitArray.construct" time elapsed: 00:00:00
----------------------------------------------------------

9/73 Testing: BitArray.setClearGet
9/73 Test: BitArray.setClearGet
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=BitArray.setClearGet" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"BitArray.setClearGet" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = BitArray.setClearGet
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BitArray
[ RUN      ] BitArray.setClearGet
[       OK ] BitArray.setClearGet (0 ms)
[----------] 1 test from BitArray (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BitArray.setClearGet" end time: Jul 18 23:02 CEST
"BitArray.setClearGet" time elapsed: 00:00:00
----------------------------------------------------------

10/73 Testing: LinkedList.insertNode
10/73 Test: LinkedList.insertNode
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=LinkedList.insertNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"LinkedList.insertNode" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = LinkedList.insertNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.insertNode
[       OK ] LinkedList.insertNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.insertNode" end time: Jul 18 23:02 CEST
"LinkedList.insertNode" time elapsed: 00:00:00
----------------------------------------------------------

11/73 Testing: LinkedList.loopForward
11/73 Test: LinkedList.loopForward
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=LinkedList.loopForward" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"LinkedList.loopForward" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = LinkedList.loopForward
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.loopForward
[       OK ] LinkedList.loopForward (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.loopForward" end time: Jul 18 23:02 CEST
"LinkedList.loopForward" time elapsed: 00:00:00
----------------------------------------------------------

12/73 Testing: LinkedList.loopReversed
12/73 Test: LinkedList.loopReversed
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=LinkedList.loopReversed" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"LinkedList.loopReversed" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = LinkedList.loopReversed
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.loopReversed
[       OK ] LinkedList.loopReversed (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.loopReversed" end time: Jul 18 23:02 CEST
"LinkedList.loopReversed" time elapsed: 00:00:00
----------------------------------------------------------

13/73 Testing: LinkedList.deleteNode
13/73 Test: LinkedList.deleteNode
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=LinkedList.deleteNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"LinkedList.deleteNode" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = LinkedList.deleteNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.deleteNode
[       OK ] LinkedList.deleteNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.deleteNode" end time: Jul 18 23:02 CEST
"LinkedList.deleteNode" time elapsed: 00:00:00
----------------------------------------------------------

14/73 Testing: LinkedList.deleteFirstNode
14/73 Test: LinkedList.deleteFirstNode
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=LinkedList.deleteFirstNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"LinkedList.deleteFirstNode" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = LinkedList.deleteFirstNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.deleteFirstNode
[       OK ] LinkedList.deleteFirstNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.deleteFirstNode" end time: Jul 18 23:02 CEST
"LinkedList.deleteFirstNode" time elapsed: 00:00:00
----------------------------------------------------------

15/73 Testing: LinkedList.deleteLastNode
15/73 Test: LinkedList.deleteLastNode
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=LinkedList.deleteLastNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"LinkedList.deleteLastNode" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = LinkedList.deleteLastNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.deleteLastNode
[       OK ] LinkedList.deleteLastNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.deleteLastNode" end time: Jul 18 23:02 CEST
"LinkedList.deleteLastNode" time elapsed: 00:00:00
----------------------------------------------------------

16/73 Testing: LinkedList.moveDownNode
16/73 Test: LinkedList.moveDownNode
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=LinkedList.moveDownNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"LinkedList.moveDownNode" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = LinkedList.moveDownNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.moveDownNode
[       OK ] LinkedList.moveDownNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.moveDownNode" end time: Jul 18 23:02 CEST
"LinkedList.moveDownNode" time elapsed: 00:00:00
----------------------------------------------------------

17/73 Testing: LinkedList.moveDownFirstNode
17/73 Test: LinkedList.moveDownFirstNode
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=LinkedList.moveDownFirstNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"LinkedList.moveDownFirstNode" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = LinkedList.moveDownFirstNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.moveDownFirstNode
[       OK ] LinkedList.moveDownFirstNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.moveDownFirstNode" end time: Jul 18 23:02 CEST
"LinkedList.moveDownFirstNode" time elapsed: 00:00:00
----------------------------------------------------------

18/73 Testing: LinkedList.moveDownSecondNode
18/73 Test: LinkedList.moveDownSecondNode
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=LinkedList.moveDownSecondNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"LinkedList.moveDownSecondNode" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = LinkedList.moveDownSecondNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.moveDownSecondNode
[       OK ] LinkedList.moveDownSecondNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.moveDownSecondNode" end time: Jul 18 23:02 CEST
"LinkedList.moveDownSecondNode" time elapsed: 00:00:00
----------------------------------------------------------

19/73 Testing: LinkedList.moveDownLastNode
19/73 Test: LinkedList.moveDownLastNode
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=LinkedList.moveDownLastNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"LinkedList.moveDownLastNode" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = LinkedList.moveDownLastNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.moveDownLastNode
[       OK ] LinkedList.moveDownLastNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.moveDownLastNode" end time: Jul 18 23:02 CEST
"LinkedList.moveDownLastNode" time elapsed: 00:00:00
----------------------------------------------------------

20/73 Testing: LinkedList.moveDownOnlyElement
20/73 Test: LinkedList.moveDownOnlyElement
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=LinkedList.moveDownOnlyElement" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"LinkedList.moveDownOnlyElement" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = LinkedList.moveDownOnlyElement
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.moveDownOnlyElement
[       OK ] LinkedList.moveDownOnlyElement (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.moveDownOnlyElement" end time: Jul 18 23:02 CEST
"LinkedList.moveDownOnlyElement" time elapsed: 00:00:00
----------------------------------------------------------

21/73 Testing: MCUVU.setValue
21/73 Test: MCUVU.setValue
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=MCUVU.setValue" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"MCUVU.setValue" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = MCUVU.setValue
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVU
[ RUN      ] MCUVU.setValue
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[       OK ] MCUVU.setValue (0 ms)
[----------] 1 test from MCUVU (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVU.setValue" end time: Jul 18 23:02 CEST
"MCUVU.setValue" time elapsed: 00:00:00
----------------------------------------------------------

22/73 Testing: MCUVU.setOverload
22/73 Test: MCUVU.setOverload
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=MCUVU.setOverload" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"MCUVU.setOverload" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = MCUVU.setOverload
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVU
[ RUN      ] MCUVU.setOverload
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 5
[       OK ] MCUVU.setOverload (0 ms)
[----------] 1 test from MCUVU (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVU.setOverload" end time: Jul 18 23:02 CEST
"MCUVU.setOverload" time elapsed: 00:00:00
----------------------------------------------------------

23/73 Testing: MCUVU.clearOverload
23/73 Test: MCUVU.clearOverload
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=MCUVU.clearOverload" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"MCUVU.clearOverload" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = MCUVU.clearOverload
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVU
[ RUN      ] MCUVU.clearOverload
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[       OK ] MCUVU.clearOverload (0 ms)
[----------] 1 test from MCUVU (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVU.clearOverload" end time: Jul 18 23:02 CEST
"MCUVU.clearOverload" time elapsed: 00:00:00
----------------------------------------------------------

24/73 Testing: MCUVU.retainValueAfterOverload
24/73 Test: MCUVU.retainValueAfterOverload
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=MCUVU.retainValueAfterOverload" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"MCUVU.retainValueAfterOverload" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = MCUVU.retainValueAfterOverload
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVU
[ RUN      ] MCUVU.retainValueAfterOverload
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[       OK ] MCUVU.retainValueAfterOverload (0 ms)
[----------] 1 test from MCUVU (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVU.retainValueAfterOverload" end time: Jul 18 23:02 CEST
"MCUVU.retainValueAfterOverload" time elapsed: 00:00:00
----------------------------------------------------------

25/73 Testing: MCUVU.decay
25/73 Test: MCUVU.decay
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=MCUVU.decay" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"MCUVU.decay" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = MCUVU.decay
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVU
[ RUN      ] MCUVU.decay
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[       OK ] MCUVU.decay (0 ms)
[----------] 1 test from MCUVU (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVU.decay" end time: Jul 18 23:02 CEST
"MCUVU.decay" time elapsed: 00:00:00
----------------------------------------------------------

26/73 Testing: MCUVUBankable.setValueBankChangeAddress
26/73 Test: MCUVUBankable.setValueBankChangeAddress
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=MCUVUBankable.setValueBankChangeAddress" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"MCUVUBankable.setValueBankChangeAddress" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = MCUVUBankable.setValueBankChangeAddress
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVUBankable
[ RUN      ] MCUVUBankable.setValueBankChangeAddress
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = , base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 2ul] @ line 117]:	target track = 8
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 8, base address = 4, number of banks = 
[       OK ] MCUVUBankable.setValueBankChangeAddress (0 ms)
[----------] 1 test from MCUVUBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVUBankable.setValueBankChangeAddress" end time: Jul 18 23:02 CEST
"MCUVUBankable.setValueBankChangeAddress" time elapsed: 00:00:00
----------------------------------------------------------

27/73 Testing: MCUVUBankable.setValueBankChangeChannel
27/73 Test: MCUVUBankable.setValueBankChangeChannel
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=MCUVUBankable.setValueBankChangeChannel" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"MCUVUBankable.setValueBankChangeChannel" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = MCUVUBankable.setValueBankChangeChannel
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVUBankable
[ RUN      ] MCUVUBankable.setValueBankChangeChannel
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = , base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 3ul] @ line 117]:	target track = 4
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 4, base address = 4, number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = 
, base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 3ul] @ line 117]:	target track = 4
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 4, base address = 4, number of banks = 
[       OK ] MCUVUBankable.setValueBankChangeChannel (0 ms)
[----------] 1 test from MCUVUBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVUBankable.setValueBankChangeChannel" end time: Jul 18 23:02 CEST
"MCUVUBankable.setValueBankChangeChannel" time elapsed: 00:00:00
----------------------------------------------------------

28/73 Testing: MCUVUBankable.overloadBankChangeAddress
28/73 Test: MCUVUBankable.overloadBankChangeAddress
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=MCUVUBankable.overloadBankChangeAddress" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"MCUVUBankable.overloadBankChangeAddress" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = MCUVUBankable.overloadBankChangeAddress
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVUBankable
[ RUN      ] MCUVUBankable.overloadBankChangeAddress
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = , base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 2ul] @ line 117]:	target track = 8
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 8, base address = 4, number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = , base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 2ul] @ line 117]:	target track = 8
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 8, base address = 4, number of banks = 
[       OK ] MCUVUBankable.overloadBankChangeAddress (0 ms)
[----------] 1 test from MCUVUBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVUBankable.overloadBankChangeAddress" end time: Jul 18 23:02 CEST
"MCUVUBankable.overloadBankChangeAddress" time elapsed: 00:00:00
----------------------------------------------------------

29/73 Testing: MCUVUBankable.decay
29/73 Test: MCUVUBankable.decay
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=MCUVUBankable.decay" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"MCUVUBankable.decay" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = MCUVUBankable.decay
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVUBankable
[ RUN      ] MCUVUBankable.decay
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = , base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 2ul] @ line 117]:	target track = 8
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 8, base address = 4, number of banks = 
[       OK ] MCUVUBankable.decay (0 ms)
[----------] 1 test from MCUVUBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVUBankable.decay" end time: Jul 18 23:02 CEST
"MCUVUBankable.decay" time elapsed: 00:00:00
----------------------------------------------------------

30/73 Testing: CCButton.pressAndRelease
30/73 Test: CCButton.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=CCButton.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"CCButton.pressAndRelease" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = CCButton.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButton
[ RUN      ] CCButton.pressAndRelease
[       OK ] CCButton.pressAndRelease (0 ms)
[----------] 1 test from CCButton (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButton.pressAndRelease" end time: Jul 18 23:02 CEST
"CCButton.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

31/73 Testing: CCButtonBankable.pressAndRelease
31/73 Test: CCButtonBankable.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=CCButtonBankable.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"CCButtonBankable.pressAndRelease" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = CCButtonBankable.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButtonBankable
[ RUN      ] CCButtonBankable.pressAndRelease
[       OK ] CCButtonBankable.pressAndRelease (0 ms)
[----------] 1 test from CCButtonBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButtonBankable.pressAndRelease" end time: Jul 18 23:02 CEST
"CCButtonBankable.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

32/73 Testing: CCButtonBankable.changeSettingAndPressAndRelease
32/73 Test: CCButtonBankable.changeSettingAndPressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=CCButtonBankable.changeSettingAndPressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"CCButtonBankable.changeSettingAndPressAndRelease" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = CCButtonBankable.changeSettingAndPressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButtonBankable
[ RUN      ] CCButtonBankable.changeSettingAndPressAndRelease
[       OK ] CCButtonBankable.changeSettingAndPressAndRelease (0 ms)
[----------] 1 test from CCButtonBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButtonBankable.changeSettingAndPressAndRelease" end time: Jul 18 23:02 CEST
"CCButtonBankable.changeSettingAndPressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

33/73 Testing: CCButtonBankable.pressAndChangeSettingAndRelease
33/73 Test: CCButtonBankable.pressAndChangeSettingAndRelease
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=CCButtonBankable.pressAndChangeSettingAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"CCButtonBankable.pressAndChangeSettingAndRelease" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = CCButtonBankable.pressAndChangeSettingAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButtonBankable
[ RUN      ] CCButtonBankable.pressAndChangeSettingAndRelease
[       OK ] CCButtonBankable.pressAndChangeSettingAndRelease (1 ms)
[----------] 1 test from CCButtonBankable (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButtonBankable.pressAndChangeSettingAndRelease" end time: Jul 18 23:02 CEST
"CCButtonBankable.pressAndChangeSettingAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

34/73 Testing: CCButtons.pressAndRelease
34/73 Test: CCButtons.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=CCButtons.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"CCButtons.pressAndRelease" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = CCButtons.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButtons
[ RUN      ] CCButtons.pressAndRelease
[       OK ] CCButtons.pressAndRelease (0 ms)
[----------] 1 test from CCButtons (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButtons.pressAndRelease" end time: Jul 18 23:02 CEST
"CCButtons.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

35/73 Testing: NoteButton.pressAndRelease
35/73 Test: NoteButton.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=NoteButton.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"NoteButton.pressAndRelease" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = NoteButton.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButton
[ RUN      ] NoteButton.pressAndRelease
[       OK ] NoteButton.pressAndRelease (1 ms)
[----------] 1 test from NoteButton (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButton.pressAndRelease" end time: Jul 18 23:02 CEST
"NoteButton.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

36/73 Testing: NoteButtonBankable.pressAndRelease
36/73 Test: NoteButtonBankable.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=NoteButtonBankable.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"NoteButtonBankable.pressAndRelease" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = NoteButtonBankable.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonBankable
[ RUN      ] NoteButtonBankable.pressAndRelease
[       OK ] NoteButtonBankable.pressAndRelease (0 ms)
[----------] 1 test from NoteButtonBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonBankable.pressAndRelease" end time: Jul 18 23:02 CEST
"NoteButtonBankable.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

37/73 Testing: NoteButtonBankable.changeSettingAndPressAndRelease
37/73 Test: NoteButtonBankable.changeSettingAndPressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=NoteButtonBankable.changeSettingAndPressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"NoteButtonBankable.changeSettingAndPressAndRelease" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = NoteButtonBankable.changeSettingAndPressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonBankable
[ RUN      ] NoteButtonBankable.changeSettingAndPressAndRelease
[       OK ] NoteButtonBankable.changeSettingAndPressAndRelease (0 ms)
[----------] 1 test from NoteButtonBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonBankable.changeSettingAndPressAndRelease" end time: Jul 18 23:02 CEST
"NoteButtonBankable.changeSettingAndPressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

38/73 Testing: NoteButtonBankable.pressAndChangeSettingAndRelease
38/73 Test: NoteButtonBankable.pressAndChangeSettingAndRelease
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=NoteButtonBankable.pressAndChangeSettingAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"NoteButtonBankable.pressAndChangeSettingAndRelease" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = NoteButtonBankable.pressAndChangeSettingAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonBankable
[ RUN      ] NoteButtonBankable.pressAndChangeSettingAndRelease
[       OK ] NoteButtonBankable.pressAndChangeSettingAndRelease (0 ms)
[----------] 1 test from NoteButtonBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonBankable.pressAndChangeSettingAndRelease" end time: Jul 18 23:02 CEST
"NoteButtonBankable.pressAndChangeSettingAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

39/73 Testing: USBMIDIParser.noteOff
39/73 Test: USBMIDIParser.noteOff
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.noteOff" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.noteOff" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.noteOff
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.noteOff
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	8 82 20 7f
[       OK ] USBMIDIParser.noteOff (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.noteOff" end time: Jul 18 23:02 CEST
"USBMIDIParser.noteOff" time elapsed: 00:00:00
----------------------------------------------------------

40/73 Testing: USBMIDIParser.noteOn
40/73 Test: USBMIDIParser.noteOn
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.noteOn" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.noteOn" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.noteOn
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.noteOn
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	9 93 2a 7e
[       OK ] USBMIDIParser.noteOn (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.noteOn" end time: Jul 18 23:02 CEST
"USBMIDIParser.noteOn" time elapsed: 00:00:00
----------------------------------------------------------

41/73 Testing: USBMIDIParser.sysEx2Bytes
41/73 Test: USBMIDIParser.sysEx2Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.sysEx2Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.sysEx2Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.sysEx2Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx2Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 f0 f7 0
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: f7	SysExLength = 2
End SysEx
[       OK ] USBMIDIParser.sysEx2Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx2Bytes" end time: Jul 18 23:02 CEST
"USBMIDIParser.sysEx2Bytes" time elapsed: 00:00:00
----------------------------------------------------------

42/73 Testing: USBMIDIParser.sysEx3Bytes
42/73 Test: USBMIDIParser.sysEx3Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.sysEx3Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.sysEx3Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.sysEx3Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx3Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 f0 10 f7
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 10	SysExLength = 2
SysEx data byte: f7	SysExLength = 3
End SysEx
[       OK ] USBMIDIParser.sysEx3Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx3Bytes" end time: Jul 18 23:02 CEST
"USBMIDIParser.sysEx3Bytes" time elapsed: 00:00:00
----------------------------------------------------------

43/73 Testing: USBMIDIParser.sysEx4Bytes
43/73 Test: USBMIDIParser.sysEx4Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.sysEx4Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.sysEx4Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.sysEx4Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx4Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 11 12
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 11	SysExLength = 2
SysEx data byte: 12	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
SysEx data byte: f7	SysExLength = 4
End SysEx
[       OK ] USBMIDIParser.sysEx4Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx4Bytes" end time: Jul 18 23:02 CEST
"USBMIDIParser.sysEx4Bytes" time elapsed: 00:00:00
----------------------------------------------------------

44/73 Testing: USBMIDIParser.sysEx5Bytes
44/73 Test: USBMIDIParser.sysEx5Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.sysEx5Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.sysEx5Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.sysEx5Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx5Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 21 22
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 21	SysExLength = 2
SysEx data byte: 22	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 23 f7 0
SysEx data byte: 23	SysExLength = 4
SysEx data byte: f7	SysExLength = 5
End SysEx
[       OK ] USBMIDIParser.sysEx5Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx5Bytes" end time: Jul 18 23:02 CEST
"USBMIDIParser.sysEx5Bytes" time elapsed: 00:00:00
----------------------------------------------------------

45/73 Testing: USBMIDIParser.sysEx6Bytes
45/73 Test: USBMIDIParser.sysEx6Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.sysEx6Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.sysEx6Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.sysEx6Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx6Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 31 32
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 31	SysExLength = 2
SysEx data byte: 32	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 33 34 f7
SysEx data byte: 33	SysExLength = 4
SysEx data byte: 34	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
End SysEx
[       OK ] USBMIDIParser.sysEx6Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx6Bytes" end time: Jul 18 23:02 CEST
"USBMIDIParser.sysEx6Bytes" time elapsed: 00:00:00
----------------------------------------------------------

46/73 Testing: USBMIDIParser.sysEx7Bytes
46/73 Test: USBMIDIParser.sysEx7Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.sysEx7Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.sysEx7Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.sysEx7Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx7Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 41 42
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 41	SysExLength = 2
SysEx data byte: 42	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 43 44 45
SysEx data byte: 43	SysExLength = 4
SysEx data byte: 44	SysExLength = 5
SysEx data byte: 45	SysExLength = 6
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
SysEx data byte: f7	SysExLength = 7
End SysEx
[       OK ] USBMIDIParser.sysEx7Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx7Bytes" end time: Jul 18 23:02 CEST
"USBMIDIParser.sysEx7Bytes" time elapsed: 00:00:00
----------------------------------------------------------

47/73 Testing: USBMIDIParser.sysEx12Bytes
47/73 Test: USBMIDIParser.sysEx12Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.sysEx12Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.sysEx12Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.sysEx12Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx12Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 51 52
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 51	SysExLength = 2
SysEx data byte: 52	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 53 54 55
SysEx data byte: 53	SysExLength = 4
SysEx data byte: 54	SysExLength = 5
SysEx data byte: 55	SysExLength = 6
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 56 57 58
SysEx data byte: 56	SysExLength = 7
SysEx data byte: 57	SysExLength = 8
SysEx data byte: 58	SysExLength = 9
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 59 5a f7
SysEx data byte: 59	SysExLength = 10
SysEx data byte: 5a	SysExLength = 11
SysEx data byte: f7	SysExLength = 12
End SysEx
[       OK ] USBMIDIParser.sysEx12Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx12Bytes" end time: Jul 18 23:02 CEST
"USBMIDIParser.sysEx12Bytes" time elapsed: 00:00:00
----------------------------------------------------------

48/73 Testing: USBMIDIParser.sysExContinueWithoutStarting
48/73 Test: USBMIDIParser.sysExContinueWithoutStarting
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.sysExContinueWithoutStarting" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.sysExContinueWithoutStarting" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.sysExContinueWithoutStarting
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysExContinueWithoutStarting
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 33 34 f7
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 79]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExContinueWithoutStarting (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysExContinueWithoutStarting" end time: Jul 18 23:02 CEST
"USBMIDIParser.sysExContinueWithoutStarting" time elapsed: 00:00:00
----------------------------------------------------------

49/73 Testing: USBMIDIParser.sysExEndsWithoutStarting1Byte
49/73 Test: USBMIDIParser.sysExEndsWithoutStarting1Byte
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.sysExEndsWithoutStarting1Byte" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.sysExEndsWithoutStarting1Byte" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.sysExEndsWithoutStarting1Byte
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting1Byte
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 43]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting1Byte (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysExEndsWithoutStarting1Byte" end time: Jul 18 23:02 CEST
"USBMIDIParser.sysExEndsWithoutStarting1Byte" time elapsed: 00:00:00
----------------------------------------------------------

50/73 Testing: USBMIDIParser.sysExEndsWithoutStarting2Bytes
50/73 Test: USBMIDIParser.sysExEndsWithoutStarting2Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.sysExEndsWithoutStarting2Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.sysExEndsWithoutStarting2Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.sysExEndsWithoutStarting2Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting2Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 10 f7 0
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 60]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting2Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysExEndsWithoutStarting2Bytes" end time: Jul 18 23:02 CEST
"USBMIDIParser.sysExEndsWithoutStarting2Bytes" time elapsed: 00:00:00
----------------------------------------------------------

51/73 Testing: USBMIDIParser.sysExEndsWithoutStarting3Bytes
51/73 Test: USBMIDIParser.sysExEndsWithoutStarting3Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=USBMIDIParser.sysExEndsWithoutStarting3Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"USBMIDIParser.sysExEndsWithoutStarting3Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = USBMIDIParser.sysExEndsWithoutStarting3Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting3Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 10 11 f7
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 79]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting3Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysExEndsWithoutStarting3Bytes" end time: Jul 18 23:02 CEST
"USBMIDIParser.sysExEndsWithoutStarting3Bytes" time elapsed: 00:00:00
----------------------------------------------------------

52/73 Testing: SerialMIDIParser.noteOff
52/73 Test: SerialMIDIParser.noteOff
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.noteOff" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.noteOff" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.noteOff
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.noteOff
[       OK ] SerialMIDIParser.noteOff (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.noteOff" end time: Jul 18 23:02 CEST
"SerialMIDIParser.noteOff" time elapsed: 00:00:00
----------------------------------------------------------

53/73 Testing: SerialMIDIParser.noteOn
53/73 Test: SerialMIDIParser.noteOn
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.noteOn" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.noteOn" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.noteOn
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.noteOn
[       OK ] SerialMIDIParser.noteOn (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.noteOn" end time: Jul 18 23:02 CEST
"SerialMIDIParser.noteOn" time elapsed: 00:00:00
----------------------------------------------------------

54/73 Testing: SerialMIDIParser.noteOnRunningStatus
54/73 Test: SerialMIDIParser.noteOnRunningStatus
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.noteOnRunningStatus" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.noteOnRunningStatus" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.noteOnRunningStatus
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.noteOnRunningStatus
[       OK ] SerialMIDIParser.noteOnRunningStatus (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.noteOnRunningStatus" end time: Jul 18 23:02 CEST
"SerialMIDIParser.noteOnRunningStatus" time elapsed: 00:00:00
----------------------------------------------------------

55/73 Testing: SerialMIDIParser.afterTouch
55/73 Test: SerialMIDIParser.afterTouch
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.afterTouch" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.afterTouch" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.afterTouch
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.afterTouch
[       OK ] SerialMIDIParser.afterTouch (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.afterTouch" end time: Jul 18 23:02 CEST
"SerialMIDIParser.afterTouch" time elapsed: 00:00:00
----------------------------------------------------------

56/73 Testing: SerialMIDIParser.controlChange
56/73 Test: SerialMIDIParser.controlChange
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.controlChange" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.controlChange" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.controlChange
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.controlChange
[       OK ] SerialMIDIParser.controlChange (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.controlChange" end time: Jul 18 23:02 CEST
"SerialMIDIParser.controlChange" time elapsed: 00:00:00
----------------------------------------------------------

57/73 Testing: SerialMIDIParser.programChange
57/73 Test: SerialMIDIParser.programChange
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.programChange" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.programChange" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.programChange
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.programChange
[       OK ] SerialMIDIParser.programChange (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.programChange" end time: Jul 18 23:02 CEST
"SerialMIDIParser.programChange" time elapsed: 00:00:00
----------------------------------------------------------

58/73 Testing: SerialMIDIParser.programChangeRunningStatus
58/73 Test: SerialMIDIParser.programChangeRunningStatus
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.programChangeRunningStatus" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.programChangeRunningStatus" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.programChangeRunningStatus
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.programChangeRunningStatus
[       OK ] SerialMIDIParser.programChangeRunningStatus (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.programChangeRunningStatus" end time: Jul 18 23:02 CEST
"SerialMIDIParser.programChangeRunningStatus" time elapsed: 00:00:00
----------------------------------------------------------

59/73 Testing: SerialMIDIParser.channelPressure
59/73 Test: SerialMIDIParser.channelPressure
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.channelPressure" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.channelPressure" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.channelPressure
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.channelPressure
[       OK ] SerialMIDIParser.channelPressure (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.channelPressure" end time: Jul 18 23:02 CEST
"SerialMIDIParser.channelPressure" time elapsed: 00:00:00
----------------------------------------------------------

60/73 Testing: SerialMIDIParser.pitchBend
60/73 Test: SerialMIDIParser.pitchBend
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.pitchBend" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.pitchBend" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.pitchBend
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.pitchBend
[       OK ] SerialMIDIParser.pitchBend (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.pitchBend" end time: Jul 18 23:02 CEST
"SerialMIDIParser.pitchBend" time elapsed: 00:00:00
----------------------------------------------------------

61/73 Testing: SerialMIDIParser.sysEx2Bytes
61/73 Test: SerialMIDIParser.sysEx2Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.sysEx2Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.sysEx2Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.sysEx2Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysEx2Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: f7	SysExLength = 2
[       OK ] SerialMIDIParser.sysEx2Bytes (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysEx2Bytes" end time: Jul 18 23:02 CEST
"SerialMIDIParser.sysEx2Bytes" time elapsed: 00:00:00
----------------------------------------------------------

62/73 Testing: SerialMIDIParser.sysEx3Bytes
62/73 Test: SerialMIDIParser.sysEx3Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.sysEx3Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.sysEx3Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.sysEx3Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysEx3Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 10	SysExLength = 2
SysEx data byte: f7	SysExLength = 3
[       OK ] SerialMIDIParser.sysEx3Bytes (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysEx3Bytes" end time: Jul 18 23:02 CEST
"SerialMIDIParser.sysEx3Bytes" time elapsed: 00:00:00
----------------------------------------------------------

63/73 Testing: SerialMIDIParser.sysEx7Bytes
63/73 Test: SerialMIDIParser.sysEx7Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.sysEx7Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.sysEx7Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.sysEx7Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysEx7Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 41	SysExLength = 2
SysEx data byte: 42	SysExLength = 3
SysEx data byte: 43	SysExLength = 4
SysEx data byte: 44	SysExLength = 5
SysEx data byte: 45	SysExLength = 6
SysEx data byte: f7	SysExLength = 7
[       OK ] SerialMIDIParser.sysEx7Bytes (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysEx7Bytes" end time: Jul 18 23:02 CEST
"SerialMIDIParser.sysEx7Bytes" time elapsed: 00:00:00
----------------------------------------------------------

64/73 Testing: SerialMIDIParser.sysExEndsWithoutStarting1Byte
64/73 Test: SerialMIDIParser.sysExEndsWithoutStarting1Byte
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.sysExEndsWithoutStarting1Byte" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.sysExEndsWithoutStarting1Byte" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.sysExEndsWithoutStarting1Byte
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting1Byte
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting1Byte (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysExEndsWithoutStarting1Byte" end time: Jul 18 23:02 CEST
"SerialMIDIParser.sysExEndsWithoutStarting1Byte" time elapsed: 00:00:00
----------------------------------------------------------

65/73 Testing: SerialMIDIParser.sysExEndsWithoutStarting2Bytes
65/73 Test: SerialMIDIParser.sysExEndsWithoutStarting2Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.sysExEndsWithoutStarting2Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.sysExEndsWithoutStarting2Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.sysExEndsWithoutStarting2Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting2Bytes
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 33]:	Error: No header
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting2Bytes (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysExEndsWithoutStarting2Bytes" end time: Jul 18 23:02 CEST
"SerialMIDIParser.sysExEndsWithoutStarting2Bytes" time elapsed: 00:00:00
----------------------------------------------------------

66/73 Testing: SerialMIDIParser.sysExEndsWithoutStarting3Bytes
66/73 Test: SerialMIDIParser.sysExEndsWithoutStarting3Bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=SerialMIDIParser.sysExEndsWithoutStarting3Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"SerialMIDIParser.sysExEndsWithoutStarting3Bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = SerialMIDIParser.sysExEndsWithoutStarting3Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting3Bytes
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 33]:	Error: No header
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 33]:	Error: No header
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting3Bytes (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysExEndsWithoutStarting3Bytes" end time: Jul 18 23:02 CEST
"SerialMIDIParser.sysExEndsWithoutStarting3Bytes" time elapsed: 00:00:00
----------------------------------------------------------

67/73 Testing: Example.Example
67/73 Test: Example.Example
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Example.Example" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Example.Example" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Example.Example
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Example
[ RUN      ] Example.Example
[       OK ] Example.Example (0 ms)
[----------] 1 test from Example (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Example.Example" end time: Jul 18 23:02 CEST
"Example.Example" time elapsed: 00:00:00
----------------------------------------------------------

68/73 Testing: millis.millis
68/73 Test: millis.millis
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=millis.millis" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"millis.millis" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = millis.millis
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from millis
[ RUN      ] millis.millis
[       OK ] millis.millis (0 ms)
[----------] 1 test from millis (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"millis.millis" end time: Jul 18 23:02 CEST
"millis.millis" time elapsed: 00:00:00
----------------------------------------------------------

69/73 Testing: Serial.write_byte
69/73 Test: Serial.write_byte
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Serial.write_byte" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Serial.write_byte" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Serial.write_byte
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Serial
[ RUN      ] Serial.write_byte
[       OK ] Serial.write_byte (0 ms)
[----------] 1 test from Serial (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Serial.write_byte" end time: Jul 18 23:02 CEST
"Serial.write_byte" time elapsed: 00:00:00
----------------------------------------------------------

70/73 Testing: Serial.write_bytes
70/73 Test: Serial.write_bytes
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Serial.write_bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Serial.write_bytes" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Serial.write_bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Serial
[ RUN      ] Serial.write_bytes
[       OK ] Serial.write_bytes (0 ms)
[----------] 1 test from Serial (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Serial.write_bytes" end time: Jul 18 23:02 CEST
"Serial.write_bytes" time elapsed: 00:00:00
----------------------------------------------------------

71/73 Testing: Serial.print_string
71/73 Test: Serial.print_string
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Serial.print_string" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Serial.print_string" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Serial.print_string
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Serial
[ RUN      ] Serial.print_string
[       OK ] Serial.print_string (0 ms)
[----------] 1 test from Serial (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Serial.print_string" end time: Jul 18 23:02 CEST
"Serial.print_string" time elapsed: 00:00:00
----------------------------------------------------------

72/73 Testing: Serial.println_string
72/73 Test: Serial.println_string
Command: "/home/pieter/GitHub/Control-Surface/bin/tests" "--gtest_filter=Serial.println_string" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface
"Serial.println_string" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Serial.println_string
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Serial
[ RUN      ] Serial.println_string
[       OK ] Serial.println_string (0 ms)
[----------] 1 test from Serial (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Serial.println_string" end time: Jul 18 23:02 CEST
"Serial.println_string" time elapsed: 00:00:00
----------------------------------------------------------

73/73 Testing: Tests
73/73 Test: Tests
Command: "/home/pieter/GitHub/Control-Surface/bin/tests"
Directory: /home/pieter/GitHub/Control-Surface
"Tests" start time: Jul 18 23:02 CEST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 72 tests from 15 test cases.
[----------] Global test environment set-up.
[----------] 7 tests from Button
[ RUN      ] Button.construct
[       OK ] Button.construct (0 ms)
[ RUN      ] Button.released
[       OK ] Button.released (0 ms)
[ RUN      ] Button.falling
[       OK ] Button.falling (0 ms)
[ RUN      ] Button.pressed
[       OK ] Button.pressed (0 ms)
[ RUN      ] Button.rising
[       OK ] Button.rising (0 ms)
[ RUN      ] Button.debouncePressed
[       OK ] Button.debouncePressed (0 ms)
[ RUN      ] Button.debounceReleased
[       OK ] Button.debounceReleased (0 ms)
[----------] 7 tests from Button (0 ms total)

[----------] 2 tests from BitArray
[ RUN      ] BitArray.construct
[       OK ] BitArray.construct (0 ms)
[ RUN      ] BitArray.setClearGet
[       OK ] BitArray.setClearGet (0 ms)
[----------] 2 tests from BitArray (0 ms total)

[----------] 11 tests from LinkedList
[ RUN      ] LinkedList.insertNode
[       OK ] LinkedList.insertNode (0 ms)
[ RUN      ] LinkedList.loopForward
[       OK ] LinkedList.loopForward (0 ms)
[ RUN      ] LinkedList.loopReversed
[       OK ] LinkedList.loopReversed (0 ms)
[ RUN      ] LinkedList.deleteNode
[       OK ] LinkedList.deleteNode (0 ms)
[ RUN      ] LinkedList.deleteFirstNode
[       OK ] LinkedList.deleteFirstNode (0 ms)
[ RUN      ] LinkedList.deleteLastNode
[       OK ] LinkedList.deleteLastNode (0 ms)
[ RUN      ] LinkedList.moveDownNode
[       OK ] LinkedList.moveDownNode (0 ms)
[ RUN      ] LinkedList.moveDownFirstNode
[       OK ] LinkedList.moveDownFirstNode (0 ms)
[ RUN      ] LinkedList.moveDownSecondNode
[       OK ] LinkedList.moveDownSecondNode (0 ms)
[ RUN      ] LinkedList.moveDownLastNode
[       OK ] LinkedList.moveDownLastNode (0 ms)
[ RUN      ] LinkedList.moveDownOnlyElement
[       OK ] LinkedList.moveDownOnlyElement (0 ms)
[----------] 11 tests from LinkedList (0 ms total)

[----------] 5 tests from MCUVU
[ RUN      ] MCUVU.setValue
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[       OK ] MCUVU.setValue (0 ms)
[ RUN      ] MCUVU.setOverload
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 5
[       OK ] MCUVU.setOverload (0 ms)
[ RUN      ] MCUVU.clearOverload
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[       OK ] MCUVU.clearOverload (0 ms)
[ RUN      ] MCUVU.retainValueAfterOverload
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[       OK ] MCUVU.retainValueAfterOverload (0 ms)
[ RUN      ] MCUVU.decay
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[virtual bool MCU_VU::updateImpl(const MIDI_message_matcher&) @ line 69]:	target track = 4
[       OK ] MCUVU.decay (0 ms)
[----------] 5 tests from MCUVU (0 ms total)

[----------] 4 tests from MCUVUBankable
[ RUN      ] MCUVUBankable.setValueBankChangeAddress
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = , base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 2ul] @ line 117]:	target track = 8
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 8, base address = 4, number of banks = 
[       OK ] MCUVUBankable.setValueBankChangeAddress (0 ms)
[ RUN      ] MCUVUBankable.setValueBankChangeChannel
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = , base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 3ul] @ line 117]:	target track = 4
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 4, base address = 4, number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = 
, base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 3ul] @ line 117]:	target track = 4
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 4, base address = 4, number of banks = 
[       OK ] MCUVUBankable.setValueBankChangeChannel (0 ms)
[ RUN      ] MCUVUBankable.overloadBankChangeAddress
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = , base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 2ul] @ line 117]:	target track = 8
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 8, base address = 4, number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = , base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 2ul] @ line 117]:	target track = 8
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 8, base address = 4, number of banks = 
[       OK ] MCUVUBankable.overloadBankChangeAddress (0 ms)
[ RUN      ] MCUVUBankable.decay
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 33]:	
[bool Bankable::matchChannel(uint8_t, uint8_t, uint8_t) const @ line 76]:	target channel = , base channel = , number of banks = 
[bool MIDI_Input_Element::updateWith(const MIDI_message_matcher&) @ line 36]:	Channel matched
[bool MCU_VU_Bankable<NUMBER_OF_BANKS>::updateImpl(const MIDI_message_matcher&) [with long unsigned int NUMBER_OF_BANKS = 2ul] @ line 117]:	target track = 8
[bool Bankable::matchAddress(uint8_t, uint8_t, uint8_t) const @ line 63]:	target address = 8, base address = 4, number of banks = 
[       OK ] MCUVUBankable.decay (0 ms)
[----------] 4 tests from MCUVUBankable (0 ms total)

[----------] 1 test from CCButton
[ RUN      ] CCButton.pressAndRelease
[       OK ] CCButton.pressAndRelease (1 ms)
[----------] 1 test from CCButton (1 ms total)

[----------] 3 tests from CCButtonBankable
[ RUN      ] CCButtonBankable.pressAndRelease
[       OK ] CCButtonBankable.pressAndRelease (0 ms)
[ RUN      ] CCButtonBankable.changeSettingAndPressAndRelease
[       OK ] CCButtonBankable.changeSettingAndPressAndRelease (0 ms)
[ RUN      ] CCButtonBankable.pressAndChangeSettingAndRelease
[       OK ] CCButtonBankable.pressAndChangeSettingAndRelease (0 ms)
[----------] 3 tests from CCButtonBankable (0 ms total)

[----------] 1 test from CCButtons
[ RUN      ] CCButtons.pressAndRelease
[       OK ] CCButtons.pressAndRelease (0 ms)
[----------] 1 test from CCButtons (0 ms total)

[----------] 1 test from NoteButton
[ RUN      ] NoteButton.pressAndRelease
[       OK ] NoteButton.pressAndRelease (0 ms)
[----------] 1 test from NoteButton (0 ms total)

[----------] 3 tests from NoteButtonBankable
[ RUN      ] NoteButtonBankable.pressAndRelease
[       OK ] NoteButtonBankable.pressAndRelease (0 ms)
[ RUN      ] NoteButtonBankable.changeSettingAndPressAndRelease
[       OK ] NoteButtonBankable.changeSettingAndPressAndRelease (0 ms)
[ RUN      ] NoteButtonBankable.pressAndChangeSettingAndRelease
[       OK ] NoteButtonBankable.pressAndChangeSettingAndRelease (0 ms)
[----------] 3 tests from NoteButtonBankable (0 ms total)

[----------] 13 tests from USBMIDIParser
[ RUN      ] USBMIDIParser.noteOff
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	8 82 20 7f
[       OK ] USBMIDIParser.noteOff (0 ms)
[ RUN      ] USBMIDIParser.noteOn
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	9 93 2a 7e
[       OK ] USBMIDIParser.noteOn (0 ms)
[ RUN      ] USBMIDIParser.sysEx2Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 f0 f7 0
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: f7	SysExLength = 2
End SysEx
[       OK ] USBMIDIParser.sysEx2Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx3Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 f0 10 f7
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 10	SysExLength = 2
SysEx data byte: f7	SysExLength = 3
End SysEx
[       OK ] USBMIDIParser.sysEx3Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx4Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 11 12
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 11	SysExLength = 2
SysEx data byte: 12	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
SysEx data byte: f7	SysExLength = 4
End SysEx
[       OK ] USBMIDIParser.sysEx4Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx5Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 21 22
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 21	SysExLength = 2
SysEx data byte: 22	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 23 f7 0
SysEx data byte: 23	SysExLength = 4
SysEx data byte: f7	SysExLength = 5
End SysEx
[       OK ] USBMIDIParser.sysEx5Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx6Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 31 32
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 31	SysExLength = 2
SysEx data byte: 32	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 33 34 f7
SysEx data byte: 33	SysExLength = 4
SysEx data byte: 34	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
End SysEx
[       OK ] USBMIDIParser.sysEx6Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx7Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 41 42
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 41	SysExLength = 2
SysEx data byte: 42	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 43 44 45
SysEx data byte: 43	SysExLength = 4
SysEx data byte: 44	SysExLength = 5
SysEx data byte: 45	SysExLength = 6
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
SysEx data byte: f7	SysExLength = 7
End SysEx
[       OK ] USBMIDIParser.sysEx7Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx12Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 51 52
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 51	SysExLength = 2
SysEx data byte: 52	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 53 54 55
SysEx data byte: 53	SysExLength = 4
SysEx data byte: 54	SysExLength = 5
SysEx data byte: 55	SysExLength = 6
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 56 57 58
SysEx data byte: 56	SysExLength = 7
SysEx data byte: 57	SysExLength = 8
SysEx data byte: 58	SysExLength = 9
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 59 5a f7
SysEx data byte: 59	SysExLength = 10
SysEx data byte: 5a	SysExLength = 11
SysEx data byte: f7	SysExLength = 12
End SysEx
[       OK ] USBMIDIParser.sysEx12Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysExContinueWithoutStarting
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 33 34 f7
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 79]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExContinueWithoutStarting (0 ms)
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting1Byte
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 43]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting1Byte (0 ms)
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting2Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 10 f7 0
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 60]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting2Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting3Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 10 11 f7
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 79]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting3Bytes (0 ms)
[----------] 13 tests from USBMIDIParser (0 ms total)

[----------] 15 tests from SerialMIDIParser
[ RUN      ] SerialMIDIParser.noteOff
[       OK ] SerialMIDIParser.noteOff (0 ms)
[ RUN      ] SerialMIDIParser.noteOn
[       OK ] SerialMIDIParser.noteOn (0 ms)
[ RUN      ] SerialMIDIParser.noteOnRunningStatus
[       OK ] SerialMIDIParser.noteOnRunningStatus (1 ms)
[ RUN      ] SerialMIDIParser.afterTouch
[       OK ] SerialMIDIParser.afterTouch (0 ms)
[ RUN      ] SerialMIDIParser.controlChange
[       OK ] SerialMIDIParser.controlChange (0 ms)
[ RUN      ] SerialMIDIParser.programChange
[       OK ] SerialMIDIParser.programChange (0 ms)
[ RUN      ] SerialMIDIParser.programChangeRunningStatus
[       OK ] SerialMIDIParser.programChangeRunningStatus (0 ms)
[ RUN      ] SerialMIDIParser.channelPressure
[       OK ] SerialMIDIParser.channelPressure (0 ms)
[ RUN      ] SerialMIDIParser.pitchBend
[       OK ] SerialMIDIParser.pitchBend (0 ms)
[ RUN      ] SerialMIDIParser.sysEx2Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: f7	SysExLength = 2
[       OK ] SerialMIDIParser.sysEx2Bytes (0 ms)
[ RUN      ] SerialMIDIParser.sysEx3Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 10	SysExLength = 2
SysEx data byte: f7	SysExLength = 3
[       OK ] SerialMIDIParser.sysEx3Bytes (0 ms)
[ RUN      ] SerialMIDIParser.sysEx7Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 41	SysExLength = 2
SysEx data byte: 42	SysExLength = 3
SysEx data byte: 43	SysExLength = 4
SysEx data byte: 44	SysExLength = 5
SysEx data byte: 45	SysExLength = 6
SysEx data byte: f7	SysExLength = 7
[       OK ] SerialMIDIParser.sysEx7Bytes (0 ms)
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting1Byte
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting1Byte (0 ms)
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting2Bytes
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 58]:	Data byte ignored
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting2Bytes (0 ms)
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting3Bytes
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 58]:	Data byte ignored
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 58]:	Data byte ignored
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting3Bytes (0 ms)
[----------] 15 tests from SerialMIDIParser (1 ms total)

[----------] 1 test from Example
[ RUN      ] Example.Example
[       OK ] Example.Example (0 ms)
[----------] 1 test from Example (0 ms total)

[----------] 1 test from millis
[ RUN      ] millis.millis
[       OK ] millis.millis (0 ms)
[----------] 1 test from millis (0 ms total)

[----------] 4 tests from Serial
[ RUN      ] Serial.write_byte
[       OK ] Serial.write_byte (0 ms)
[ RUN      ] Serial.write_bytes
[       OK ] Serial.write_bytes (0 ms)
[ RUN      ] Serial.print_string
[       OK ] Serial.print_string (0 ms)
[ RUN      ] Serial.println_string
[       OK ] Serial.println_string (0 ms)
[----------] 4 tests from Serial (0 ms total)

[----------] Global test environment tear-down
[==========] 72 tests from 15 test cases ran. (2 ms total)
[  PASSED  ] 72 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Tests" end time: Jul 18 23:02 CEST
"Tests" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Jul 18 23:02 CEST
