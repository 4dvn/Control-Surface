Start testing: Aug 28 11:14 CEST
----------------------------------------------------------
1/154 Testing: millis.millis
1/154 Test: millis.millis
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=millis.millis" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"millis.millis" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = millis.millis
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from millis
[ RUN      ] millis.millis
[       OK ] millis.millis (0 ms)
[----------] 1 test from millis (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"millis.millis" end time: Aug 28 11:14 CEST
"millis.millis" time elapsed: 00:00:00
----------------------------------------------------------

2/154 Testing: Serial.write_byte
2/154 Test: Serial.write_byte
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Serial.write_byte" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Serial.write_byte" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Serial.write_byte
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Serial
[ RUN      ] Serial.write_byte
[       OK ] Serial.write_byte (0 ms)
[----------] 1 test from Serial (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Serial.write_byte" end time: Aug 28 11:14 CEST
"Serial.write_byte" time elapsed: 00:00:00
----------------------------------------------------------

3/154 Testing: Serial.write_bytes
3/154 Test: Serial.write_bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Serial.write_bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Serial.write_bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Serial.write_bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Serial
[ RUN      ] Serial.write_bytes
[       OK ] Serial.write_bytes (0 ms)
[----------] 1 test from Serial (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Serial.write_bytes" end time: Aug 28 11:14 CEST
"Serial.write_bytes" time elapsed: 00:00:00
----------------------------------------------------------

4/154 Testing: Serial.print_string
4/154 Test: Serial.print_string
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Serial.print_string" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Serial.print_string" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Serial.print_string
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Serial
[ RUN      ] Serial.print_string
[       OK ] Serial.print_string (0 ms)
[----------] 1 test from Serial (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Serial.print_string" end time: Aug 28 11:14 CEST
"Serial.print_string" time elapsed: 00:00:00
----------------------------------------------------------

5/154 Testing: Serial.println_string
5/154 Test: Serial.println_string
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Serial.println_string" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Serial.println_string" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Serial.println_string
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Serial
[ RUN      ] Serial.println_string
[       OK ] Serial.println_string (0 ms)
[----------] 1 test from Serial (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Serial.println_string" end time: Aug 28 11:14 CEST
"Serial.println_string" time elapsed: 00:00:00
----------------------------------------------------------

6/154 Testing: Error.exception
6/154 Test: Error.exception
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Error.exception" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Error.exception" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Error.exception
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Error
[ RUN      ] Error.exception
[       OK ] Error.exception (1 ms)
[----------] 1 test from Error (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Error.exception" end time: Aug 28 11:14 CEST
"Error.exception" time elapsed: 00:00:00
----------------------------------------------------------

7/154 Testing: Error.exceptionWhatErrorCode
7/154 Test: Error.exceptionWhatErrorCode
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Error.exceptionWhatErrorCode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Error.exceptionWhatErrorCode" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Error.exceptionWhatErrorCode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Error
[ RUN      ] Error.exceptionWhatErrorCode
[virtual void Error_exceptionWhatErrorCode_Test::TestBody() @ line 67]:	An error occured
[       OK ] Error.exceptionWhatErrorCode (0 ms)
[----------] 1 test from Error (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Error.exceptionWhatErrorCode" end time: Aug 28 11:14 CEST
"Error.exceptionWhatErrorCode" time elapsed: 00:00:00
----------------------------------------------------------

8/154 Testing: ManyButtonsSelector.press
8/154 Test: ManyButtonsSelector.press
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=ManyButtonsSelector.press" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"ManyButtonsSelector.press" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = ManyButtonsSelector.press
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ManyButtonsSelector
[ RUN      ] ManyButtonsSelector.press
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] ManyButtonsSelector.press (0 ms)
[----------] 1 test from ManyButtonsSelector (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"ManyButtonsSelector.press" end time: Aug 28 11:14 CEST
"ManyButtonsSelector.press" time elapsed: 00:00:00
----------------------------------------------------------

9/154 Testing: IncrementSelector.pressWrap
9/154 Test: IncrementSelector.pressWrap
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=IncrementSelector.pressWrap" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"IncrementSelector.pressWrap" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = IncrementSelector.pressWrap
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from IncrementSelector
[ RUN      ] IncrementSelector.pressWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementSelector.pressWrap (0 ms)
[----------] 1 test from IncrementSelector (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"IncrementSelector.pressWrap" end time: Aug 28 11:14 CEST
"IncrementSelector.pressWrap" time elapsed: 00:00:00
----------------------------------------------------------

10/154 Testing: IncrementSelector.pressNoWrap
10/154 Test: IncrementSelector.pressNoWrap
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=IncrementSelector.pressNoWrap" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"IncrementSelector.pressNoWrap" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = IncrementSelector.pressNoWrap
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from IncrementSelector
[ RUN      ] IncrementSelector.pressNoWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementSelector.pressNoWrap (0 ms)
[----------] 1 test from IncrementSelector (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"IncrementSelector.pressNoWrap" end time: Aug 28 11:14 CEST
"IncrementSelector.pressNoWrap" time elapsed: 00:00:00
----------------------------------------------------------

11/154 Testing: IncrementDecrementSelector.pressIncrementWrap
11/154 Test: IncrementDecrementSelector.pressIncrementWrap
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=IncrementDecrementSelector.pressIncrementWrap" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"IncrementDecrementSelector.pressIncrementWrap" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = IncrementDecrementSelector.pressIncrementWrap
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from IncrementDecrementSelector
[ RUN      ] IncrementDecrementSelector.pressIncrementWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementDecrementSelector.pressIncrementWrap (0 ms)
[----------] 1 test from IncrementDecrementSelector (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"IncrementDecrementSelector.pressIncrementWrap" end time: Aug 28 11:14 CEST
"IncrementDecrementSelector.pressIncrementWrap" time elapsed: 00:00:00
----------------------------------------------------------

12/154 Testing: IncrementDecrementSelector.pressDecrementWrap
12/154 Test: IncrementDecrementSelector.pressDecrementWrap
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=IncrementDecrementSelector.pressDecrementWrap" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"IncrementDecrementSelector.pressDecrementWrap" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = IncrementDecrementSelector.pressDecrementWrap
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from IncrementDecrementSelector
[ RUN      ] IncrementDecrementSelector.pressDecrementWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementDecrementSelector.pressDecrementWrap (0 ms)
[----------] 1 test from IncrementDecrementSelector (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"IncrementDecrementSelector.pressDecrementWrap" end time: Aug 28 11:14 CEST
"IncrementDecrementSelector.pressDecrementWrap" time elapsed: 00:00:00
----------------------------------------------------------

13/154 Testing: IncrementDecrementSelector.reset
13/154 Test: IncrementDecrementSelector.reset
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=IncrementDecrementSelector.reset" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"IncrementDecrementSelector.reset" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = IncrementDecrementSelector.reset
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from IncrementDecrementSelector
[ RUN      ] IncrementDecrementSelector.reset
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementDecrementSelector.reset (0 ms)
[----------] 1 test from IncrementDecrementSelector (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"IncrementDecrementSelector.reset" end time: Aug 28 11:14 CEST
"IncrementDecrementSelector.reset" time elapsed: 00:00:00
----------------------------------------------------------

14/154 Testing: IncrementDecrementSelector.pressIncrementNoWrap
14/154 Test: IncrementDecrementSelector.pressIncrementNoWrap
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=IncrementDecrementSelector.pressIncrementNoWrap" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"IncrementDecrementSelector.pressIncrementNoWrap" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = IncrementDecrementSelector.pressIncrementNoWrap
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from IncrementDecrementSelector
[ RUN      ] IncrementDecrementSelector.pressIncrementNoWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementDecrementSelector.pressIncrementNoWrap (0 ms)
[----------] 1 test from IncrementDecrementSelector (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"IncrementDecrementSelector.pressIncrementNoWrap" end time: Aug 28 11:14 CEST
"IncrementDecrementSelector.pressIncrementNoWrap" time elapsed: 00:00:00
----------------------------------------------------------

15/154 Testing: IncrementDecrementSelector.pressDecrementNoWrap
15/154 Test: IncrementDecrementSelector.pressDecrementNoWrap
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=IncrementDecrementSelector.pressDecrementNoWrap" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"IncrementDecrementSelector.pressDecrementNoWrap" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = IncrementDecrementSelector.pressDecrementNoWrap
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from IncrementDecrementSelector
[ RUN      ] IncrementDecrementSelector.pressDecrementNoWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementDecrementSelector.pressDecrementNoWrap (0 ms)
[----------] 1 test from IncrementDecrementSelector (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"IncrementDecrementSelector.pressDecrementNoWrap" end time: Aug 28 11:14 CEST
"IncrementDecrementSelector.pressDecrementNoWrap" time elapsed: 00:00:00
----------------------------------------------------------

16/154 Testing: USBMIDIParser.noteOff
16/154 Test: USBMIDIParser.noteOff
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.noteOff" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.noteOff" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.noteOff
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.noteOff
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	8 82 20 7f
[       OK ] USBMIDIParser.noteOff (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.noteOff" end time: Aug 28 11:14 CEST
"USBMIDIParser.noteOff" time elapsed: 00:00:00
----------------------------------------------------------

17/154 Testing: USBMIDIParser.noteOn
17/154 Test: USBMIDIParser.noteOn
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.noteOn" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.noteOn" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.noteOn
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.noteOn
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	9 93 2a 7e
[       OK ] USBMIDIParser.noteOn (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.noteOn" end time: Aug 28 11:14 CEST
"USBMIDIParser.noteOn" time elapsed: 00:00:00
----------------------------------------------------------

18/154 Testing: USBMIDIParser.sysEx2Bytes
18/154 Test: USBMIDIParser.sysEx2Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.sysEx2Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.sysEx2Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.sysEx2Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx2Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 f0 f7 0
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: f7	SysExLength = 2
End SysEx
[       OK ] USBMIDIParser.sysEx2Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx2Bytes" end time: Aug 28 11:14 CEST
"USBMIDIParser.sysEx2Bytes" time elapsed: 00:00:00
----------------------------------------------------------

19/154 Testing: USBMIDIParser.sysEx3Bytes
19/154 Test: USBMIDIParser.sysEx3Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.sysEx3Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.sysEx3Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.sysEx3Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx3Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 f0 10 f7
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 10	SysExLength = 2
SysEx data byte: f7	SysExLength = 3
End SysEx
[       OK ] USBMIDIParser.sysEx3Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx3Bytes" end time: Aug 28 11:14 CEST
"USBMIDIParser.sysEx3Bytes" time elapsed: 00:00:00
----------------------------------------------------------

20/154 Testing: USBMIDIParser.sysEx4Bytes
20/154 Test: USBMIDIParser.sysEx4Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.sysEx4Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.sysEx4Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.sysEx4Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx4Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 11 12
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 11	SysExLength = 2
SysEx data byte: 12	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
SysEx data byte: f7	SysExLength = 4
End SysEx
[       OK ] USBMIDIParser.sysEx4Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx4Bytes" end time: Aug 28 11:14 CEST
"USBMIDIParser.sysEx4Bytes" time elapsed: 00:00:00
----------------------------------------------------------

21/154 Testing: USBMIDIParser.sysEx5Bytes
21/154 Test: USBMIDIParser.sysEx5Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.sysEx5Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.sysEx5Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.sysEx5Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx5Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 21 22
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 21	SysExLength = 2
SysEx data byte: 22	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 23 f7 0
SysEx data byte: 23	SysExLength = 4
SysEx data byte: f7	SysExLength = 5
End SysEx
[       OK ] USBMIDIParser.sysEx5Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx5Bytes" end time: Aug 28 11:14 CEST
"USBMIDIParser.sysEx5Bytes" time elapsed: 00:00:00
----------------------------------------------------------

22/154 Testing: USBMIDIParser.sysEx6Bytes
22/154 Test: USBMIDIParser.sysEx6Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.sysEx6Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.sysEx6Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.sysEx6Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx6Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 31 32
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 31	SysExLength = 2
SysEx data byte: 32	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 33 34 f7
SysEx data byte: 33	SysExLength = 4
SysEx data byte: 34	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
End SysEx
[       OK ] USBMIDIParser.sysEx6Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx6Bytes" end time: Aug 28 11:14 CEST
"USBMIDIParser.sysEx6Bytes" time elapsed: 00:00:00
----------------------------------------------------------

23/154 Testing: USBMIDIParser.sysEx7Bytes
23/154 Test: USBMIDIParser.sysEx7Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.sysEx7Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.sysEx7Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.sysEx7Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx7Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 41 42
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 41	SysExLength = 2
SysEx data byte: 42	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 43 44 45
SysEx data byte: 43	SysExLength = 4
SysEx data byte: 44	SysExLength = 5
SysEx data byte: 45	SysExLength = 6
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
SysEx data byte: f7	SysExLength = 7
End SysEx
[       OK ] USBMIDIParser.sysEx7Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx7Bytes" end time: Aug 28 11:14 CEST
"USBMIDIParser.sysEx7Bytes" time elapsed: 00:00:00
----------------------------------------------------------

24/154 Testing: USBMIDIParser.sysEx12Bytes
24/154 Test: USBMIDIParser.sysEx12Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.sysEx12Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.sysEx12Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.sysEx12Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysEx12Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 51 52
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 51	SysExLength = 2
SysEx data byte: 52	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 53 54 55
SysEx data byte: 53	SysExLength = 4
SysEx data byte: 54	SysExLength = 5
SysEx data byte: 55	SysExLength = 6
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 56 57 58
SysEx data byte: 56	SysExLength = 7
SysEx data byte: 57	SysExLength = 8
SysEx data byte: 58	SysExLength = 9
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 59 5a f7
SysEx data byte: 59	SysExLength = 10
SysEx data byte: 5a	SysExLength = 11
SysEx data byte: f7	SysExLength = 12
End SysEx
[       OK ] USBMIDIParser.sysEx12Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysEx12Bytes" end time: Aug 28 11:14 CEST
"USBMIDIParser.sysEx12Bytes" time elapsed: 00:00:00
----------------------------------------------------------

25/154 Testing: USBMIDIParser.sysExContinueWithoutStarting
25/154 Test: USBMIDIParser.sysExContinueWithoutStarting
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.sysExContinueWithoutStarting" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.sysExContinueWithoutStarting" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.sysExContinueWithoutStarting
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysExContinueWithoutStarting
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 33 34 f7
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 79]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExContinueWithoutStarting (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysExContinueWithoutStarting" end time: Aug 28 11:14 CEST
"USBMIDIParser.sysExContinueWithoutStarting" time elapsed: 00:00:00
----------------------------------------------------------

26/154 Testing: USBMIDIParser.sysExEndsWithoutStarting1Byte
26/154 Test: USBMIDIParser.sysExEndsWithoutStarting1Byte
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.sysExEndsWithoutStarting1Byte" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.sysExEndsWithoutStarting1Byte" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.sysExEndsWithoutStarting1Byte
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting1Byte
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 43]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting1Byte (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysExEndsWithoutStarting1Byte" end time: Aug 28 11:14 CEST
"USBMIDIParser.sysExEndsWithoutStarting1Byte" time elapsed: 00:00:00
----------------------------------------------------------

27/154 Testing: USBMIDIParser.sysExEndsWithoutStarting2Bytes
27/154 Test: USBMIDIParser.sysExEndsWithoutStarting2Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.sysExEndsWithoutStarting2Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.sysExEndsWithoutStarting2Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.sysExEndsWithoutStarting2Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting2Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 10 f7 0
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 60]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting2Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysExEndsWithoutStarting2Bytes" end time: Aug 28 11:14 CEST
"USBMIDIParser.sysExEndsWithoutStarting2Bytes" time elapsed: 00:00:00
----------------------------------------------------------

28/154 Testing: USBMIDIParser.sysExEndsWithoutStarting3Bytes
28/154 Test: USBMIDIParser.sysExEndsWithoutStarting3Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=USBMIDIParser.sysExEndsWithoutStarting3Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"USBMIDIParser.sysExEndsWithoutStarting3Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = USBMIDIParser.sysExEndsWithoutStarting3Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from USBMIDIParser
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting3Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 10 11 f7
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 79]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting3Bytes (0 ms)
[----------] 1 test from USBMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"USBMIDIParser.sysExEndsWithoutStarting3Bytes" end time: Aug 28 11:14 CEST
"USBMIDIParser.sysExEndsWithoutStarting3Bytes" time elapsed: 00:00:00
----------------------------------------------------------

29/154 Testing: SerialMIDIParser.noteOff
29/154 Test: SerialMIDIParser.noteOff
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.noteOff" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.noteOff" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.noteOff
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.noteOff
[       OK ] SerialMIDIParser.noteOff (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.noteOff" end time: Aug 28 11:14 CEST
"SerialMIDIParser.noteOff" time elapsed: 00:00:00
----------------------------------------------------------

30/154 Testing: SerialMIDIParser.noteOn
30/154 Test: SerialMIDIParser.noteOn
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.noteOn" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.noteOn" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.noteOn
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.noteOn
[       OK ] SerialMIDIParser.noteOn (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.noteOn" end time: Aug 28 11:14 CEST
"SerialMIDIParser.noteOn" time elapsed: 00:00:00
----------------------------------------------------------

31/154 Testing: SerialMIDIParser.noteOnRunningStatus
31/154 Test: SerialMIDIParser.noteOnRunningStatus
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.noteOnRunningStatus" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.noteOnRunningStatus" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.noteOnRunningStatus
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.noteOnRunningStatus
[       OK ] SerialMIDIParser.noteOnRunningStatus (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.noteOnRunningStatus" end time: Aug 28 11:14 CEST
"SerialMIDIParser.noteOnRunningStatus" time elapsed: 00:00:00
----------------------------------------------------------

32/154 Testing: SerialMIDIParser.afterTouch
32/154 Test: SerialMIDIParser.afterTouch
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.afterTouch" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.afterTouch" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.afterTouch
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.afterTouch
[       OK ] SerialMIDIParser.afterTouch (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.afterTouch" end time: Aug 28 11:14 CEST
"SerialMIDIParser.afterTouch" time elapsed: 00:00:00
----------------------------------------------------------

33/154 Testing: SerialMIDIParser.controlChange
33/154 Test: SerialMIDIParser.controlChange
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.controlChange" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.controlChange" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.controlChange
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.controlChange
[       OK ] SerialMIDIParser.controlChange (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.controlChange" end time: Aug 28 11:14 CEST
"SerialMIDIParser.controlChange" time elapsed: 00:00:00
----------------------------------------------------------

34/154 Testing: SerialMIDIParser.programChange
34/154 Test: SerialMIDIParser.programChange
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.programChange" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.programChange" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.programChange
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.programChange
[       OK ] SerialMIDIParser.programChange (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.programChange" end time: Aug 28 11:14 CEST
"SerialMIDIParser.programChange" time elapsed: 00:00:00
----------------------------------------------------------

35/154 Testing: SerialMIDIParser.programChangeRunningStatus
35/154 Test: SerialMIDIParser.programChangeRunningStatus
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.programChangeRunningStatus" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.programChangeRunningStatus" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.programChangeRunningStatus
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.programChangeRunningStatus
[       OK ] SerialMIDIParser.programChangeRunningStatus (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.programChangeRunningStatus" end time: Aug 28 11:14 CEST
"SerialMIDIParser.programChangeRunningStatus" time elapsed: 00:00:00
----------------------------------------------------------

36/154 Testing: SerialMIDIParser.channelPressure
36/154 Test: SerialMIDIParser.channelPressure
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.channelPressure" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.channelPressure" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.channelPressure
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.channelPressure
[       OK ] SerialMIDIParser.channelPressure (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.channelPressure" end time: Aug 28 11:14 CEST
"SerialMIDIParser.channelPressure" time elapsed: 00:00:00
----------------------------------------------------------

37/154 Testing: SerialMIDIParser.pitchBend
37/154 Test: SerialMIDIParser.pitchBend
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.pitchBend" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.pitchBend" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.pitchBend
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.pitchBend
[       OK ] SerialMIDIParser.pitchBend (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.pitchBend" end time: Aug 28 11:14 CEST
"SerialMIDIParser.pitchBend" time elapsed: 00:00:00
----------------------------------------------------------

38/154 Testing: SerialMIDIParser.sysEx2Bytes
38/154 Test: SerialMIDIParser.sysEx2Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.sysEx2Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.sysEx2Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.sysEx2Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysEx2Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: f7	SysExLength = 2
[       OK ] SerialMIDIParser.sysEx2Bytes (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysEx2Bytes" end time: Aug 28 11:14 CEST
"SerialMIDIParser.sysEx2Bytes" time elapsed: 00:00:00
----------------------------------------------------------

39/154 Testing: SerialMIDIParser.sysEx3Bytes
39/154 Test: SerialMIDIParser.sysEx3Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.sysEx3Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.sysEx3Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.sysEx3Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysEx3Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 10	SysExLength = 2
SysEx data byte: f7	SysExLength = 3
[       OK ] SerialMIDIParser.sysEx3Bytes (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysEx3Bytes" end time: Aug 28 11:14 CEST
"SerialMIDIParser.sysEx3Bytes" time elapsed: 00:00:00
----------------------------------------------------------

40/154 Testing: SerialMIDIParser.sysEx7Bytes
40/154 Test: SerialMIDIParser.sysEx7Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.sysEx7Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.sysEx7Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.sysEx7Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysEx7Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 41	SysExLength = 2
SysEx data byte: 42	SysExLength = 3
SysEx data byte: 43	SysExLength = 4
SysEx data byte: 44	SysExLength = 5
SysEx data byte: 45	SysExLength = 6
SysEx data byte: f7	SysExLength = 7
[       OK ] SerialMIDIParser.sysEx7Bytes (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysEx7Bytes" end time: Aug 28 11:14 CEST
"SerialMIDIParser.sysEx7Bytes" time elapsed: 00:00:00
----------------------------------------------------------

41/154 Testing: SerialMIDIParser.sysExEndsWithoutStarting1Byte
41/154 Test: SerialMIDIParser.sysExEndsWithoutStarting1Byte
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.sysExEndsWithoutStarting1Byte" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.sysExEndsWithoutStarting1Byte" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.sysExEndsWithoutStarting1Byte
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting1Byte
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting1Byte (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysExEndsWithoutStarting1Byte" end time: Aug 28 11:14 CEST
"SerialMIDIParser.sysExEndsWithoutStarting1Byte" time elapsed: 00:00:00
----------------------------------------------------------

42/154 Testing: SerialMIDIParser.sysExEndsWithoutStarting2Bytes
42/154 Test: SerialMIDIParser.sysExEndsWithoutStarting2Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.sysExEndsWithoutStarting2Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.sysExEndsWithoutStarting2Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.sysExEndsWithoutStarting2Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting2Bytes
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 33]:	Error: No header
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting2Bytes (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysExEndsWithoutStarting2Bytes" end time: Aug 28 11:14 CEST
"SerialMIDIParser.sysExEndsWithoutStarting2Bytes" time elapsed: 00:00:00
----------------------------------------------------------

43/154 Testing: SerialMIDIParser.sysExEndsWithoutStarting3Bytes
43/154 Test: SerialMIDIParser.sysExEndsWithoutStarting3Bytes
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=SerialMIDIParser.sysExEndsWithoutStarting3Bytes" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"SerialMIDIParser.sysExEndsWithoutStarting3Bytes" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = SerialMIDIParser.sysExEndsWithoutStarting3Bytes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from SerialMIDIParser
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting3Bytes
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 33]:	Error: No header
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 33]:	Error: No header
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting3Bytes (0 ms)
[----------] 1 test from SerialMIDIParser (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SerialMIDIParser.sysExEndsWithoutStarting3Bytes" end time: Aug 28 11:14 CEST
"SerialMIDIParser.sysExEndsWithoutStarting3Bytes" time elapsed: 00:00:00
----------------------------------------------------------

44/154 Testing: NoteButtonMatrix.pressAndRelease
44/154 Test: NoteButtonMatrix.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=NoteButtonMatrix.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"NoteButtonMatrix.pressAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = NoteButtonMatrix.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonMatrix
[ RUN      ] NoteButtonMatrix.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonMatrix.pressAndRelease (0 ms)
[----------] 1 test from NoteButtonMatrix (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonMatrix.pressAndRelease" end time: Aug 28 11:14 CEST
"NoteButtonMatrix.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

45/154 Testing: NoteButtonMatrixBankable.pressChangeSettingRelease
45/154 Test: NoteButtonMatrixBankable.pressChangeSettingRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=NoteButtonMatrixBankable.pressChangeSettingRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"NoteButtonMatrixBankable.pressChangeSettingRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = NoteButtonMatrixBankable.pressChangeSettingRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonMatrixBankable
[ RUN      ] NoteButtonMatrixBankable.pressChangeSettingRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonMatrixBankable.pressChangeSettingRelease (1 ms)
[----------] 1 test from NoteButtonMatrixBankable (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonMatrixBankable.pressChangeSettingRelease" end time: Aug 28 11:14 CEST
"NoteButtonMatrixBankable.pressChangeSettingRelease" time elapsed: 00:00:00
----------------------------------------------------------

46/154 Testing: NoteButtonLatching.pressAndRelease
46/154 Test: NoteButtonLatching.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=NoteButtonLatching.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"NoteButtonLatching.pressAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = NoteButtonLatching.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonLatching
[ RUN      ] NoteButtonLatching.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonLatching.pressAndRelease (0 ms)
[----------] 1 test from NoteButtonLatching (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonLatching.pressAndRelease" end time: Aug 28 11:14 CEST
"NoteButtonLatching.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

47/154 Testing: NoteButtonLatchingBankable.pressAndRelease
47/154 Test: NoteButtonLatchingBankable.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=NoteButtonLatchingBankable.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"NoteButtonLatchingBankable.pressAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = NoteButtonLatchingBankable.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonLatchingBankable
[ RUN      ] NoteButtonLatchingBankable.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonLatchingBankable.pressAndRelease (0 ms)
[----------] 1 test from NoteButtonLatchingBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonLatchingBankable.pressAndRelease" end time: Aug 28 11:14 CEST
"NoteButtonLatchingBankable.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

48/154 Testing: NoteButtonLatchingBankable.changeSettingAndPressAndRelease
48/154 Test: NoteButtonLatchingBankable.changeSettingAndPressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=NoteButtonLatchingBankable.changeSettingAndPressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"NoteButtonLatchingBankable.changeSettingAndPressAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = NoteButtonLatchingBankable.changeSettingAndPressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonLatchingBankable
[ RUN      ] NoteButtonLatchingBankable.changeSettingAndPressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonLatchingBankable.changeSettingAndPressAndRelease (0 ms)
[----------] 1 test from NoteButtonLatchingBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonLatchingBankable.changeSettingAndPressAndRelease" end time: Aug 28 11:14 CEST
"NoteButtonLatchingBankable.changeSettingAndPressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

49/154 Testing: NoteButtonLatchingBankable.pressAndChangeSettingAndRelease
49/154 Test: NoteButtonLatchingBankable.pressAndChangeSettingAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=NoteButtonLatchingBankable.pressAndChangeSettingAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"NoteButtonLatchingBankable.pressAndChangeSettingAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = NoteButtonLatchingBankable.pressAndChangeSettingAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonLatchingBankable
[ RUN      ] NoteButtonLatchingBankable.pressAndChangeSettingAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonLatchingBankable.pressAndChangeSettingAndRelease (1 ms)
[----------] 1 test from NoteButtonLatchingBankable (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonLatchingBankable.pressAndChangeSettingAndRelease" end time: Aug 28 11:14 CEST
"NoteButtonLatchingBankable.pressAndChangeSettingAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

50/154 Testing: NoteButton.pressAndRelease
50/154 Test: NoteButton.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=NoteButton.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"NoteButton.pressAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = NoteButton.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButton
[ RUN      ] NoteButton.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButton.pressAndRelease (0 ms)
[----------] 1 test from NoteButton (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButton.pressAndRelease" end time: Aug 28 11:14 CEST
"NoteButton.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

51/154 Testing: NoteButtonBankable.pressAndRelease
51/154 Test: NoteButtonBankable.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=NoteButtonBankable.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"NoteButtonBankable.pressAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = NoteButtonBankable.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonBankable
[ RUN      ] NoteButtonBankable.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonBankable.pressAndRelease (0 ms)
[----------] 1 test from NoteButtonBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonBankable.pressAndRelease" end time: Aug 28 11:14 CEST
"NoteButtonBankable.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

52/154 Testing: NoteButtonBankable.changeSettingAndPressAndRelease
52/154 Test: NoteButtonBankable.changeSettingAndPressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=NoteButtonBankable.changeSettingAndPressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"NoteButtonBankable.changeSettingAndPressAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = NoteButtonBankable.changeSettingAndPressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonBankable
[ RUN      ] NoteButtonBankable.changeSettingAndPressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonBankable.changeSettingAndPressAndRelease (1 ms)
[----------] 1 test from NoteButtonBankable (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonBankable.changeSettingAndPressAndRelease" end time: Aug 28 11:14 CEST
"NoteButtonBankable.changeSettingAndPressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

53/154 Testing: NoteButtonBankable.pressAndChangeSettingAndRelease
53/154 Test: NoteButtonBankable.pressAndChangeSettingAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=NoteButtonBankable.pressAndChangeSettingAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"NoteButtonBankable.pressAndChangeSettingAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = NoteButtonBankable.pressAndChangeSettingAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from NoteButtonBankable
[ RUN      ] NoteButtonBankable.pressAndChangeSettingAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonBankable.pressAndChangeSettingAndRelease (0 ms)
[----------] 1 test from NoteButtonBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"NoteButtonBankable.pressAndChangeSettingAndRelease" end time: Aug 28 11:14 CEST
"NoteButtonBankable.pressAndChangeSettingAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

54/154 Testing: CCRotaryEncoder.turnOneStep
54/154 Test: CCRotaryEncoder.turnOneStep
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCRotaryEncoder.turnOneStep" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCRotaryEncoder.turnOneStep" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCRotaryEncoder.turnOneStep
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCRotaryEncoder
[ RUN      ] CCRotaryEncoder.turnOneStep
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoder.turnOneStep (0 ms)
[----------] 1 test from CCRotaryEncoder (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCRotaryEncoder.turnOneStep" end time: Aug 28 11:14 CEST
"CCRotaryEncoder.turnOneStep" time elapsed: 00:00:00
----------------------------------------------------------

55/154 Testing: CCRotaryEncoder.turnFourHalfSteps
55/154 Test: CCRotaryEncoder.turnFourHalfSteps
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCRotaryEncoder.turnFourHalfSteps" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCRotaryEncoder.turnFourHalfSteps" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCRotaryEncoder.turnFourHalfSteps
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCRotaryEncoder
[ RUN      ] CCRotaryEncoder.turnFourHalfSteps
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoder.turnFourHalfSteps (0 ms)
[----------] 1 test from CCRotaryEncoder (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCRotaryEncoder.turnFourHalfSteps" end time: Aug 28 11:14 CEST
"CCRotaryEncoder.turnFourHalfSteps" time elapsed: 00:00:00
----------------------------------------------------------

56/154 Testing: CCRotaryEncoder.turnOneStepBackwards
56/154 Test: CCRotaryEncoder.turnOneStepBackwards
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCRotaryEncoder.turnOneStepBackwards" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCRotaryEncoder.turnOneStepBackwards" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCRotaryEncoder.turnOneStepBackwards
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCRotaryEncoder
[ RUN      ] CCRotaryEncoder.turnOneStepBackwards
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoder.turnOneStepBackwards (0 ms)
[----------] 1 test from CCRotaryEncoder (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCRotaryEncoder.turnOneStepBackwards" end time: Aug 28 11:14 CEST
"CCRotaryEncoder.turnOneStepBackwards" time elapsed: 00:00:00
----------------------------------------------------------

57/154 Testing: CCRotaryEncoder.turnSixteenSteps
57/154 Test: CCRotaryEncoder.turnSixteenSteps
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCRotaryEncoder.turnSixteenSteps" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCRotaryEncoder.turnSixteenSteps" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCRotaryEncoder.turnSixteenSteps
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCRotaryEncoder
[ RUN      ] CCRotaryEncoder.turnSixteenSteps
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoder.turnSixteenSteps (0 ms)
[----------] 1 test from CCRotaryEncoder (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCRotaryEncoder.turnSixteenSteps" end time: Aug 28 11:14 CEST
"CCRotaryEncoder.turnSixteenSteps" time elapsed: 00:00:00
----------------------------------------------------------

58/154 Testing: CCRotaryEncoder.turnSixteenStepsBackwards
58/154 Test: CCRotaryEncoder.turnSixteenStepsBackwards
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCRotaryEncoder.turnSixteenStepsBackwards" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCRotaryEncoder.turnSixteenStepsBackwards" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCRotaryEncoder.turnSixteenStepsBackwards
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCRotaryEncoder
[ RUN      ] CCRotaryEncoder.turnSixteenStepsBackwards
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoder.turnSixteenStepsBackwards (0 ms)
[----------] 1 test from CCRotaryEncoder (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCRotaryEncoder.turnSixteenStepsBackwards" end time: Aug 28 11:14 CEST
"CCRotaryEncoder.turnSixteenStepsBackwards" time elapsed: 00:00:00
----------------------------------------------------------

59/154 Testing: CCRotaryEncoderBankable.turnOneStepChangeSettingTurnOneStep
59/154 Test: CCRotaryEncoderBankable.turnOneStepChangeSettingTurnOneStep
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCRotaryEncoderBankable.turnOneStepChangeSettingTurnOneStep" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCRotaryEncoderBankable.turnOneStepChangeSettingTurnOneStep" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCRotaryEncoderBankable.turnOneStepChangeSettingTurnOneStep
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCRotaryEncoderBankable
[ RUN      ] CCRotaryEncoderBankable.turnOneStepChangeSettingTurnOneStep
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoderBankable.turnOneStepChangeSettingTurnOneStep (0 ms)
[----------] 1 test from CCRotaryEncoderBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCRotaryEncoderBankable.turnOneStepChangeSettingTurnOneStep" end time: Aug 28 11:14 CEST
"CCRotaryEncoderBankable.turnOneStepChangeSettingTurnOneStep" time elapsed: 00:00:00
----------------------------------------------------------

60/154 Testing: CCButton.pressAndRelease
60/154 Test: CCButton.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCButton.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCButton.pressAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCButton.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButton
[ RUN      ] CCButton.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButton.pressAndRelease (0 ms)
[----------] 1 test from CCButton (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButton.pressAndRelease" end time: Aug 28 11:14 CEST
"CCButton.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

61/154 Testing: CCButtonBankable.pressAndRelease
61/154 Test: CCButtonBankable.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCButtonBankable.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCButtonBankable.pressAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCButtonBankable.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButtonBankable
[ RUN      ] CCButtonBankable.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtonBankable.pressAndRelease (0 ms)
[----------] 1 test from CCButtonBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButtonBankable.pressAndRelease" end time: Aug 28 11:14 CEST
"CCButtonBankable.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

62/154 Testing: CCButtonBankable.changeSettingAndPressAndRelease
62/154 Test: CCButtonBankable.changeSettingAndPressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCButtonBankable.changeSettingAndPressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCButtonBankable.changeSettingAndPressAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCButtonBankable.changeSettingAndPressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButtonBankable
[ RUN      ] CCButtonBankable.changeSettingAndPressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtonBankable.changeSettingAndPressAndRelease (1 ms)
[----------] 1 test from CCButtonBankable (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButtonBankable.changeSettingAndPressAndRelease" end time: Aug 28 11:14 CEST
"CCButtonBankable.changeSettingAndPressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

63/154 Testing: CCButtonBankable.pressAndChangeSettingAndRelease
63/154 Test: CCButtonBankable.pressAndChangeSettingAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCButtonBankable.pressAndChangeSettingAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCButtonBankable.pressAndChangeSettingAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCButtonBankable.pressAndChangeSettingAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButtonBankable
[ RUN      ] CCButtonBankable.pressAndChangeSettingAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtonBankable.pressAndChangeSettingAndRelease (0 ms)
[----------] 1 test from CCButtonBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButtonBankable.pressAndChangeSettingAndRelease" end time: Aug 28 11:14 CEST
"CCButtonBankable.pressAndChangeSettingAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

64/154 Testing: CCButtons.pressAndRelease
64/154 Test: CCButtons.pressAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCButtons.pressAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCButtons.pressAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCButtons.pressAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButtons
[ RUN      ] CCButtons.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtons.pressAndRelease (0 ms)
[----------] 1 test from CCButtons (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButtons.pressAndRelease" end time: Aug 28 11:14 CEST
"CCButtons.pressAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

65/154 Testing: CCButtonsBankable.pressChangeBankAndRelease
65/154 Test: CCButtonsBankable.pressChangeBankAndRelease
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCButtonsBankable.pressChangeBankAndRelease" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCButtonsBankable.pressChangeBankAndRelease" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCButtonsBankable.pressChangeBankAndRelease
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButtonsBankable
[ RUN      ] CCButtonsBankable.pressChangeBankAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtonsBankable.pressChangeBankAndRelease (0 ms)
[----------] 1 test from CCButtonsBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButtonsBankable.pressChangeBankAndRelease" end time: Aug 28 11:14 CEST
"CCButtonsBankable.pressChangeBankAndRelease" time elapsed: 00:00:00
----------------------------------------------------------

66/154 Testing: CCButtonsBankable.pressChangeBankAndReleaseAndPress
66/154 Test: CCButtonsBankable.pressChangeBankAndReleaseAndPress
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=CCButtonsBankable.pressChangeBankAndReleaseAndPress" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"CCButtonsBankable.pressChangeBankAndReleaseAndPress" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = CCButtonsBankable.pressChangeBankAndReleaseAndPress
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CCButtonsBankable
[ RUN      ] CCButtonsBankable.pressChangeBankAndReleaseAndPress
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtonsBankable.pressChangeBankAndReleaseAndPress (1 ms)
[----------] 1 test from CCButtonsBankable (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"CCButtonsBankable.pressChangeBankAndReleaseAndPress" end time: Aug 28 11:14 CEST
"CCButtonsBankable.pressChangeBankAndReleaseAndPress" time elapsed: 00:00:00
----------------------------------------------------------

67/154 Testing: BluetoothMIDIInterface.initializeBegin
67/154 Test: BluetoothMIDIInterface.initializeBegin
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BluetoothMIDIInterface.initializeBegin" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BluetoothMIDIInterface.initializeBegin" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BluetoothMIDIInterface.initializeBegin
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BluetoothMIDIInterface
[ RUN      ] BluetoothMIDIInterface.initializeBegin
[       OK ] BluetoothMIDIInterface.initializeBegin (0 ms)
[----------] 1 test from BluetoothMIDIInterface (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BluetoothMIDIInterface.initializeBegin" end time: Aug 28 11:14 CEST
"BluetoothMIDIInterface.initializeBegin" time elapsed: 00:00:00
----------------------------------------------------------

68/154 Testing: BluetoothMIDIInterface.receiveChannelMessage
68/154 Test: BluetoothMIDIInterface.receiveChannelMessage
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BluetoothMIDIInterface.receiveChannelMessage" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BluetoothMIDIInterface.receiveChannelMessage" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BluetoothMIDIInterface.receiveChannelMessage
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BluetoothMIDIInterface
[ RUN      ] BluetoothMIDIInterface.receiveChannelMessage
[       OK ] BluetoothMIDIInterface.receiveChannelMessage (0 ms)
[----------] 1 test from BluetoothMIDIInterface (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BluetoothMIDIInterface.receiveChannelMessage" end time: Aug 28 11:14 CEST
"BluetoothMIDIInterface.receiveChannelMessage" time elapsed: 00:00:00
----------------------------------------------------------

69/154 Testing: BluetoothMIDIInterface.receiveMultipleChannelMessage
69/154 Test: BluetoothMIDIInterface.receiveMultipleChannelMessage
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BluetoothMIDIInterface.receiveMultipleChannelMessage" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BluetoothMIDIInterface.receiveMultipleChannelMessage" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BluetoothMIDIInterface.receiveMultipleChannelMessage
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BluetoothMIDIInterface
[ RUN      ] BluetoothMIDIInterface.receiveMultipleChannelMessage
[       OK ] BluetoothMIDIInterface.receiveMultipleChannelMessage (1 ms)
[----------] 1 test from BluetoothMIDIInterface (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BluetoothMIDIInterface.receiveMultipleChannelMessage" end time: Aug 28 11:14 CEST
"BluetoothMIDIInterface.receiveMultipleChannelMessage" time elapsed: 00:00:00
----------------------------------------------------------

70/154 Testing: BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatus
70/154 Test: BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatus
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatus" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatus" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatus
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BluetoothMIDIInterface
[ RUN      ] BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatus
[       OK ] BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatus (0 ms)
[----------] 1 test from BluetoothMIDIInterface (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatus" end time: Aug 28 11:14 CEST
"BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatus" time elapsed: 00:00:00
----------------------------------------------------------

71/154 Testing: BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatusRealTime
71/154 Test: BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatusRealTime
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatusRealTime" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatusRealTime" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatusRealTime
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BluetoothMIDIInterface
[ RUN      ] BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatusRealTime
[       OK ] BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatusRealTime (0 ms)
[----------] 1 test from BluetoothMIDIInterface (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatusRealTime" end time: Aug 28 11:14 CEST
"BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatusRealTime" time elapsed: 00:00:00
----------------------------------------------------------

72/154 Testing: BluetoothMIDIInterface.receiveMultipleTwoByteChannelMessage
72/154 Test: BluetoothMIDIInterface.receiveMultipleTwoByteChannelMessage
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BluetoothMIDIInterface.receiveMultipleTwoByteChannelMessage" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BluetoothMIDIInterface.receiveMultipleTwoByteChannelMessage" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BluetoothMIDIInterface.receiveMultipleTwoByteChannelMessage
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BluetoothMIDIInterface
[ RUN      ] BluetoothMIDIInterface.receiveMultipleTwoByteChannelMessage
[       OK ] BluetoothMIDIInterface.receiveMultipleTwoByteChannelMessage (1 ms)
[----------] 1 test from BluetoothMIDIInterface (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BluetoothMIDIInterface.receiveMultipleTwoByteChannelMessage" end time: Aug 28 11:14 CEST
"BluetoothMIDIInterface.receiveMultipleTwoByteChannelMessage" time elapsed: 00:00:00
----------------------------------------------------------

73/154 Testing: BluetoothMIDIInterface.receiveSysEx
73/154 Test: BluetoothMIDIInterface.receiveSysEx
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BluetoothMIDIInterface.receiveSysEx" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BluetoothMIDIInterface.receiveSysEx" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BluetoothMIDIInterface.receiveSysEx
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BluetoothMIDIInterface
[ RUN      ] BluetoothMIDIInterface.receiveSysEx
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 1	SysExLength = 2
SysEx data byte: 2	SysExLength = 3
SysEx data byte: 3	SysExLength = 4
SysEx data byte: 4	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
[       OK ] BluetoothMIDIInterface.receiveSysEx (0 ms)
[----------] 1 test from BluetoothMIDIInterface (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BluetoothMIDIInterface.receiveSysEx" end time: Aug 28 11:14 CEST
"BluetoothMIDIInterface.receiveSysEx" time elapsed: 00:00:00
----------------------------------------------------------

74/154 Testing: BluetoothMIDIInterface.receiveSysEx2
74/154 Test: BluetoothMIDIInterface.receiveSysEx2
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BluetoothMIDIInterface.receiveSysEx2" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BluetoothMIDIInterface.receiveSysEx2" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BluetoothMIDIInterface.receiveSysEx2
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BluetoothMIDIInterface
[ RUN      ] BluetoothMIDIInterface.receiveSysEx2
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 1	SysExLength = 2
SysEx data byte: 2	SysExLength = 3
SysEx data byte: 3	SysExLength = 4
SysEx data byte: 4	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
[       OK ] BluetoothMIDIInterface.receiveSysEx2 (0 ms)
[----------] 1 test from BluetoothMIDIInterface (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BluetoothMIDIInterface.receiveSysEx2" end time: Aug 28 11:14 CEST
"BluetoothMIDIInterface.receiveSysEx2" time elapsed: 00:00:00
----------------------------------------------------------

75/154 Testing: BluetoothMIDIInterface.receiveSysExSplitAcrossPackets
75/154 Test: BluetoothMIDIInterface.receiveSysExSplitAcrossPackets
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BluetoothMIDIInterface.receiveSysExSplitAcrossPackets" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BluetoothMIDIInterface.receiveSysExSplitAcrossPackets" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BluetoothMIDIInterface.receiveSysExSplitAcrossPackets
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BluetoothMIDIInterface
[ RUN      ] BluetoothMIDIInterface.receiveSysExSplitAcrossPackets
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 1	SysExLength = 2
SysEx data byte: 2	SysExLength = 3
SysEx data byte: 3	SysExLength = 4
SysEx data byte: 4	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
[       OK ] BluetoothMIDIInterface.receiveSysExSplitAcrossPackets (1 ms)
[----------] 1 test from BluetoothMIDIInterface (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BluetoothMIDIInterface.receiveSysExSplitAcrossPackets" end time: Aug 28 11:14 CEST
"BluetoothMIDIInterface.receiveSysExSplitAcrossPackets" time elapsed: 00:00:00
----------------------------------------------------------

76/154 Testing: BluetoothMIDIInterface.receiveSysExAndRealTime
76/154 Test: BluetoothMIDIInterface.receiveSysExAndRealTime
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BluetoothMIDIInterface.receiveSysExAndRealTime" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BluetoothMIDIInterface.receiveSysExAndRealTime" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BluetoothMIDIInterface.receiveSysExAndRealTime
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BluetoothMIDIInterface
[ RUN      ] BluetoothMIDIInterface.receiveSysExAndRealTime
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 1	SysExLength = 2
SysEx data byte: 2	SysExLength = 3
SysEx data byte: 3	SysExLength = 4
SysEx data byte: 4	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
[       OK ] BluetoothMIDIInterface.receiveSysExAndRealTime (0 ms)
[----------] 1 test from BluetoothMIDIInterface (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BluetoothMIDIInterface.receiveSysExAndRealTime" end time: Aug 28 11:14 CEST
"BluetoothMIDIInterface.receiveSysExAndRealTime" time elapsed: 00:00:00
----------------------------------------------------------

77/154 Testing: MCUVU.setValue
77/154 Test: MCUVU.setValue
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUVU.setValue" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUVU.setValue" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUVU.setValue
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVU
[ RUN      ] MCUVU.setValue
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[       OK ] MCUVU.setValue (0 ms)
[----------] 1 test from MCUVU (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVU.setValue" end time: Aug 28 11:14 CEST
"MCUVU.setValue" time elapsed: 00:00:00
----------------------------------------------------------

78/154 Testing: MCUVU.setOverload
78/154 Test: MCUVU.setOverload
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUVU.setOverload" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUVU.setOverload" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUVU.setOverload
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVU
[ RUN      ] MCUVU.setOverload
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 5
[       OK ] MCUVU.setOverload (0 ms)
[----------] 1 test from MCUVU (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVU.setOverload" end time: Aug 28 11:14 CEST
"MCUVU.setOverload" time elapsed: 00:00:00
----------------------------------------------------------

79/154 Testing: MCUVU.clearOverload
79/154 Test: MCUVU.clearOverload
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUVU.clearOverload" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUVU.clearOverload" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUVU.clearOverload
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVU
[ RUN      ] MCUVU.clearOverload
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[       OK ] MCUVU.clearOverload (0 ms)
[----------] 1 test from MCUVU (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVU.clearOverload" end time: Aug 28 11:14 CEST
"MCUVU.clearOverload" time elapsed: 00:00:00
----------------------------------------------------------

80/154 Testing: MCUVU.retainValueAfterOverload
80/154 Test: MCUVU.retainValueAfterOverload
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUVU.retainValueAfterOverload" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUVU.retainValueAfterOverload" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUVU.retainValueAfterOverload
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVU
[ RUN      ] MCUVU.retainValueAfterOverload
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[       OK ] MCUVU.retainValueAfterOverload (0 ms)
[----------] 1 test from MCUVU (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVU.retainValueAfterOverload" end time: Aug 28 11:14 CEST
"MCUVU.retainValueAfterOverload" time elapsed: 00:00:00
----------------------------------------------------------

81/154 Testing: MCUVU.decay
81/154 Test: MCUVU.decay
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUVU.decay" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUVU.decay" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUVU.decay
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVU
[ RUN      ] MCUVU.decay
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[       OK ] MCUVU.decay (0 ms)
[----------] 1 test from MCUVU (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVU.decay" end time: Aug 28 11:14 CEST
"MCUVU.decay" time elapsed: 00:00:00
----------------------------------------------------------

82/154 Testing: MCUVUBankable.setValueBankChangeAddress
82/154 Test: MCUVUBankable.setValueBankChangeAddress
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUVUBankable.setValueBankChangeAddress" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUVUBankable.setValueBankChangeAddress" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUVUBankable.setValueBankChangeAddress
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVUBankable
[ RUN      ] MCUVUBankable.setValueBankChangeAddress
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 2ul] @ line 202]:	target track = 8
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 47]:	target address = 8, base address = 4, number of banks = 
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 37]:	(node == last) = 1
[       OK ] MCUVUBankable.setValueBankChangeAddress (0 ms)
[----------] 1 test from MCUVUBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVUBankable.setValueBankChangeAddress" end time: Aug 28 11:14 CEST
"MCUVUBankable.setValueBankChangeAddress" time elapsed: 00:00:00
----------------------------------------------------------

83/154 Testing: MCUVUBankable.setValueBankChangeChannel
83/154 Test: MCUVUBankable.setValueBankChangeChannel
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUVUBankable.setValueBankChangeChannel" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUVUBankable.setValueBankChangeChannel" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUVUBankable.setValueBankChangeChannel
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVUBankable
[ RUN      ] MCUVUBankable.setValueBankChangeChannel
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 3u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 3ul] @ line 202]:	target track = 4
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 3u; uint8_t = unsigned char] @ line 47]:	target address = 4, base address = 4, number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 3u; uint8_t = unsigned char] @ line 59]:	target channel = 
, base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 3ul] @ line 202]:	target track = 4
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 3u; uint8_t = unsigned char] @ line 47]:	target address = 4, base address = 4, number of banks = 
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<3u>] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<3u>] @ line 37]:	(node == last) = 1
[       OK ] MCUVUBankable.setValueBankChangeChannel (0 ms)
[----------] 1 test from MCUVUBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVUBankable.setValueBankChangeChannel" end time: Aug 28 11:14 CEST
"MCUVUBankable.setValueBankChangeChannel" time elapsed: 00:00:00
----------------------------------------------------------

84/154 Testing: MCUVUBankable.overloadBankChangeAddress
84/154 Test: MCUVUBankable.overloadBankChangeAddress
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUVUBankable.overloadBankChangeAddress" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUVUBankable.overloadBankChangeAddress" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUVUBankable.overloadBankChangeAddress
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVUBankable
[ RUN      ] MCUVUBankable.overloadBankChangeAddress
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 2ul] @ line 202]:	target track = 8
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 47]:	target address = 8, base address = 4, number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 2ul] @ line 202]:	target track = 8
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 47]:	target address = 8, base address = 4, number of banks = 
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 37]:	(node == last) = 1
[       OK ] MCUVUBankable.overloadBankChangeAddress (0 ms)
[----------] 1 test from MCUVUBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVUBankable.overloadBankChangeAddress" end time: Aug 28 11:14 CEST
"MCUVUBankable.overloadBankChangeAddress" time elapsed: 00:00:00
----------------------------------------------------------

85/154 Testing: MCUVULEDsBankable.displayOnBankChange
85/154 Test: MCUVULEDsBankable.displayOnBankChange
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUVULEDsBankable.displayOnBankChange" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUVULEDsBankable.displayOnBankChange" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUVULEDsBankable.displayOnBankChange
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUVULEDsBankable
[ RUN      ] MCUVULEDsBankable.displayOnBankChange
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 2ul] @ line 202]:	target track = 4
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 47]:	target address = 4, base address = 4, number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 2ul] @ line 202]:	target track = 8
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 47]:	target address = 8, base address = 4, number of banks = 
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 37]:	(node == last) = 1
[       OK ] MCUVULEDsBankable.displayOnBankChange (0 ms)
[----------] 1 test from MCUVULEDsBankable (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUVULEDsBankable.displayOnBankChange" end time: Aug 28 11:14 CEST
"MCUVULEDsBankable.displayOnBankChange" time elapsed: 00:00:00
----------------------------------------------------------

86/154 Testing: MCUTimeDisplay.setFirstLetter
86/154 Test: MCUTimeDisplay.setFirstLetter
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.setFirstLetter" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.setFirstLetter" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.setFirstLetter
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.setFirstLetter
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.setFirstLetter (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.setFirstLetter" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.setFirstLetter" time elapsed: 00:00:00
----------------------------------------------------------

87/154 Testing: MCUTimeDisplay.getTextFull
87/154 Test: MCUTimeDisplay.getTextFull
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getTextFull" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getTextFull" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getTextFull
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getTextFull
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextFull (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getTextFull" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getTextFull" time elapsed: 00:00:00
----------------------------------------------------------

88/154 Testing: MCUTimeDisplay.getTextOffset
88/154 Test: MCUTimeDisplay.getTextOffset
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getTextOffset" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getTextOffset" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getTextOffset
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getTextOffset
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextOffset (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getTextOffset" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getTextOffset" time elapsed: 00:00:00
----------------------------------------------------------

89/154 Testing: MCUTimeDisplay.getTextOffsetLength
89/154 Test: MCUTimeDisplay.getTextOffsetLength
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getTextOffsetLength" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getTextOffsetLength" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getTextOffsetLength
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getTextOffsetLength
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextOffsetLength (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getTextOffsetLength" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getTextOffsetLength" time elapsed: 00:00:00
----------------------------------------------------------

90/154 Testing: MCUTimeDisplay.getTextOffsetLast
90/154 Test: MCUTimeDisplay.getTextOffsetLast
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getTextOffsetLast" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getTextOffsetLast" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getTextOffsetLast
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getTextOffsetLast
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextOffsetLast (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getTextOffsetLast" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getTextOffsetLast" time elapsed: 00:00:00
----------------------------------------------------------

91/154 Testing: MCUTimeDisplay.getTextOffsetTooBig
91/154 Test: MCUTimeDisplay.getTextOffsetTooBig
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getTextOffsetTooBig" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getTextOffsetTooBig" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getTextOffsetTooBig
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getTextOffsetTooBig
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextOffsetTooBig (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getTextOffsetTooBig" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getTextOffsetTooBig" time elapsed: 00:00:00
----------------------------------------------------------

92/154 Testing: MCUTimeDisplay.getTextLengthTooBig
92/154 Test: MCUTimeDisplay.getTextLengthTooBig
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getTextLengthTooBig" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getTextLengthTooBig" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getTextLengthTooBig
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getTextLengthTooBig
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		B 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextLengthTooBig (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getTextLengthTooBig" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getTextLengthTooBig" time elapsed: 00:00:00
----------------------------------------------------------

93/154 Testing: MCUTimeDisplay.getBarsGetBeatsGetFrames1Digit
93/154 Test: MCUTimeDisplay.getBarsGetBeatsGetFrames1Digit
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getBarsGetBeatsGetFrames1Digit" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getBarsGetBeatsGetFrames1Digit" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getBarsGetBeatsGetFrames1Digit
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFrames1Digit
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	9 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	0 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	3 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	5 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	6 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		7 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFrames1Digit (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getBarsGetBeatsGetFrames1Digit" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getBarsGetBeatsGetFrames1Digit" time elapsed: 00:00:00
----------------------------------------------------------

94/154 Testing: MCUTimeDisplay.getBarsGetBeatsGetFrames2Digits
94/154 Test: MCUTimeDisplay.getBarsGetBeatsGetFrames2Digits
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getBarsGetBeatsGetFrames2Digits" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getBarsGetBeatsGetFrames2Digits" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getBarsGetBeatsGetFrames2Digits
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFrames2Digits
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	8 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	9 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	0 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	3 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	5 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	6 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		7 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFrames2Digits (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getBarsGetBeatsGetFrames2Digits" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getBarsGetBeatsGetFrames2Digits" time elapsed: 00:00:00
----------------------------------------------------------

95/154 Testing: MCUTimeDisplay.getBarsGetBeatsGetFrames3Digits
95/154 Test: MCUTimeDisplay.getBarsGetBeatsGetFrames3Digits
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getBarsGetBeatsGetFrames3Digits" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getBarsGetBeatsGetFrames3Digits" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getBarsGetBeatsGetFrames3Digits
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFrames3Digits
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	1 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	8 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	9 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	0 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	3 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	5 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	6 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		7 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFrames3Digits (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getBarsGetBeatsGetFrames3Digits" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getBarsGetBeatsGetFrames3Digits" time elapsed: 00:00:00
----------------------------------------------------------

96/154 Testing: MCUTimeDisplay.getBarsGetBeatsGetFrames4Digits
96/154 Test: MCUTimeDisplay.getBarsGetBeatsGetFrames4Digits
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getBarsGetBeatsGetFrames4Digits" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getBarsGetBeatsGetFrames4Digits" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getBarsGetBeatsGetFrames4Digits
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFrames4Digits
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	2 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	5 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	9 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	3 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	0 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	1 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	7 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		6 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFrames4Digits (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getBarsGetBeatsGetFrames4Digits" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getBarsGetBeatsGetFrames4Digits" time elapsed: 00:00:00
----------------------------------------------------------

97/154 Testing: MCUTimeDisplay.getBarsGetBeatsGetFrames5Digits
97/154 Test: MCUTimeDisplay.getBarsGetBeatsGetFrames5Digits
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getBarsGetBeatsGetFrames5Digits" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getBarsGetBeatsGetFrames5Digits" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getBarsGetBeatsGetFrames5Digits
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFrames5Digits
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	4 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	5 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	8 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	2 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	6 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	0 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	2 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		9 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFrames5Digits (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getBarsGetBeatsGetFrames5Digits" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getBarsGetBeatsGetFrames5Digits" time elapsed: 00:00:00
----------------------------------------------------------

98/154 Testing: MCUTimeDisplay.getBarsGetBeatsGetFramesSpacesOnly
98/154 Test: MCUTimeDisplay.getBarsGetBeatsGetFramesSpacesOnly
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=MCUTimeDisplay.getBarsGetBeatsGetFramesSpacesOnly" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"MCUTimeDisplay.getBarsGetBeatsGetFramesSpacesOnly" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = MCUTimeDisplay.getBarsGetBeatsGetFramesSpacesOnly
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFramesSpacesOnly
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFramesSpacesOnly (0 ms)
[----------] 1 test from MCUTimeDisplay (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"MCUTimeDisplay.getBarsGetBeatsGetFramesSpacesOnly" end time: Aug 28 11:14 CEST
"MCUTimeDisplay.getBarsGetBeatsGetFramesSpacesOnly" time elapsed: 00:00:00
----------------------------------------------------------

99/154 Testing: LinkedList.insertNode
99/154 Test: LinkedList.insertNode
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.insertNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.insertNode" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.insertNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.insertNode
[       OK ] LinkedList.insertNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.insertNode" end time: Aug 28 11:14 CEST
"LinkedList.insertNode" time elapsed: 00:00:00
----------------------------------------------------------

100/154 Testing: LinkedList.loopForward
100/154 Test: LinkedList.loopForward
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.loopForward" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.loopForward" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.loopForward
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.loopForward
[       OK ] LinkedList.loopForward (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.loopForward" end time: Aug 28 11:14 CEST
"LinkedList.loopForward" time elapsed: 00:00:00
----------------------------------------------------------

101/154 Testing: LinkedList.loopReversed
101/154 Test: LinkedList.loopReversed
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.loopReversed" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.loopReversed" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.loopReversed
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.loopReversed
[       OK ] LinkedList.loopReversed (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.loopReversed" end time: Aug 28 11:14 CEST
"LinkedList.loopReversed" time elapsed: 00:00:00
----------------------------------------------------------

102/154 Testing: LinkedList.deleteNode
102/154 Test: LinkedList.deleteNode
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.deleteNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.deleteNode" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.deleteNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.deleteNode
[       OK ] LinkedList.deleteNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.deleteNode" end time: Aug 28 11:14 CEST
"LinkedList.deleteNode" time elapsed: 00:00:00
----------------------------------------------------------

103/154 Testing: LinkedList.deleteFirstNode
103/154 Test: LinkedList.deleteFirstNode
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.deleteFirstNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.deleteFirstNode" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.deleteFirstNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.deleteFirstNode
[       OK ] LinkedList.deleteFirstNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.deleteFirstNode" end time: Aug 28 11:14 CEST
"LinkedList.deleteFirstNode" time elapsed: 00:00:00
----------------------------------------------------------

104/154 Testing: LinkedList.deleteLastNode
104/154 Test: LinkedList.deleteLastNode
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.deleteLastNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.deleteLastNode" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.deleteLastNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.deleteLastNode
[       OK ] LinkedList.deleteLastNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.deleteLastNode" end time: Aug 28 11:14 CEST
"LinkedList.deleteLastNode" time elapsed: 00:00:00
----------------------------------------------------------

105/154 Testing: LinkedList.moveDownNode
105/154 Test: LinkedList.moveDownNode
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.moveDownNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.moveDownNode" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.moveDownNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.moveDownNode
[       OK ] LinkedList.moveDownNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.moveDownNode" end time: Aug 28 11:14 CEST
"LinkedList.moveDownNode" time elapsed: 00:00:00
----------------------------------------------------------

106/154 Testing: LinkedList.moveDownFirstNode
106/154 Test: LinkedList.moveDownFirstNode
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.moveDownFirstNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.moveDownFirstNode" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.moveDownFirstNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.moveDownFirstNode
[       OK ] LinkedList.moveDownFirstNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.moveDownFirstNode" end time: Aug 28 11:14 CEST
"LinkedList.moveDownFirstNode" time elapsed: 00:00:00
----------------------------------------------------------

107/154 Testing: LinkedList.moveDownSecondNode
107/154 Test: LinkedList.moveDownSecondNode
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.moveDownSecondNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.moveDownSecondNode" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.moveDownSecondNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.moveDownSecondNode
[       OK ] LinkedList.moveDownSecondNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.moveDownSecondNode" end time: Aug 28 11:14 CEST
"LinkedList.moveDownSecondNode" time elapsed: 00:00:00
----------------------------------------------------------

108/154 Testing: LinkedList.moveDownLastNode
108/154 Test: LinkedList.moveDownLastNode
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.moveDownLastNode" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.moveDownLastNode" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.moveDownLastNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.moveDownLastNode
[       OK ] LinkedList.moveDownLastNode (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.moveDownLastNode" end time: Aug 28 11:14 CEST
"LinkedList.moveDownLastNode" time elapsed: 00:00:00
----------------------------------------------------------

109/154 Testing: LinkedList.moveDownOnlyElement
109/154 Test: LinkedList.moveDownOnlyElement
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.moveDownOnlyElement" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.moveDownOnlyElement" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.moveDownOnlyElement
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.moveDownOnlyElement
[       OK ] LinkedList.moveDownOnlyElement (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.moveDownOnlyElement" end time: Aug 28 11:14 CEST
"LinkedList.moveDownOnlyElement" time elapsed: 00:00:00
----------------------------------------------------------

110/154 Testing: LinkedList.containsInsert
110/154 Test: LinkedList.containsInsert
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.containsInsert" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.containsInsert" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.containsInsert
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.containsInsert
[       OK ] LinkedList.containsInsert (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.containsInsert" end time: Aug 28 11:14 CEST
"LinkedList.containsInsert" time elapsed: 00:00:00
----------------------------------------------------------

111/154 Testing: LinkedList.containsDeleteFirst
111/154 Test: LinkedList.containsDeleteFirst
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.containsDeleteFirst" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.containsDeleteFirst" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.containsDeleteFirst
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.containsDeleteFirst
[       OK ] LinkedList.containsDeleteFirst (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.containsDeleteFirst" end time: Aug 28 11:14 CEST
"LinkedList.containsDeleteFirst" time elapsed: 00:00:00
----------------------------------------------------------

112/154 Testing: LinkedList.containsDeleteMiddle
112/154 Test: LinkedList.containsDeleteMiddle
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.containsDeleteMiddle" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.containsDeleteMiddle" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.containsDeleteMiddle
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.containsDeleteMiddle
[       OK ] LinkedList.containsDeleteMiddle (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.containsDeleteMiddle" end time: Aug 28 11:14 CEST
"LinkedList.containsDeleteMiddle" time elapsed: 00:00:00
----------------------------------------------------------

113/154 Testing: LinkedList.containsDeleteLast
113/154 Test: LinkedList.containsDeleteLast
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=LinkedList.containsDeleteLast" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"LinkedList.containsDeleteLast" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = LinkedList.containsDeleteLast
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedList
[ RUN      ] LinkedList.containsDeleteLast
[       OK ] LinkedList.containsDeleteLast (0 ms)
[----------] 1 test from LinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"LinkedList.containsDeleteLast" end time: Aug 28 11:14 CEST
"LinkedList.containsDeleteLast" time elapsed: 00:00:00
----------------------------------------------------------

114/154 Testing: BitArray.construct
114/154 Test: BitArray.construct
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BitArray.construct" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BitArray.construct" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BitArray.construct
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BitArray
[ RUN      ] BitArray.construct
[       OK ] BitArray.construct (0 ms)
[----------] 1 test from BitArray (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BitArray.construct" end time: Aug 28 11:14 CEST
"BitArray.construct" time elapsed: 00:00:00
----------------------------------------------------------

115/154 Testing: BitArray.setClearGet
115/154 Test: BitArray.setClearGet
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=BitArray.setClearGet" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"BitArray.setClearGet" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = BitArray.setClearGet
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BitArray
[ RUN      ] BitArray.setClearGet
[       OK ] BitArray.setClearGet (0 ms)
[----------] 1 test from BitArray (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BitArray.setClearGet" end time: Aug 28 11:14 CEST
"BitArray.setClearGet" time elapsed: 00:00:00
----------------------------------------------------------

116/154 Testing: EMA.overflow
116/154 Test: EMA.overflow
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=EMA.overflow" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"EMA.overflow" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = EMA.overflow
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from EMA
[ RUN      ] EMA.overflow
[       OK ] EMA.overflow (0 ms)
[----------] 1 test from EMA (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"EMA.overflow" end time: Aug 28 11:14 CEST
"EMA.overflow" time elapsed: 00:00:00
----------------------------------------------------------

117/154 Testing: DoublyLinkedList.iterator
117/154 Test: DoublyLinkedList.iterator
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=DoublyLinkedList.iterator" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"DoublyLinkedList.iterator" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = DoublyLinkedList.iterator
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DoublyLinkedList
[ RUN      ] DoublyLinkedList.iterator
[       OK ] DoublyLinkedList.iterator (0 ms)
[----------] 1 test from DoublyLinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"DoublyLinkedList.iterator" end time: Aug 28 11:14 CEST
"DoublyLinkedList.iterator" time elapsed: 00:00:00
----------------------------------------------------------

118/154 Testing: DoublyLinkedList.const_iterator
118/154 Test: DoublyLinkedList.const_iterator
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=DoublyLinkedList.const_iterator" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"DoublyLinkedList.const_iterator" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = DoublyLinkedList.const_iterator
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DoublyLinkedList
[ RUN      ] DoublyLinkedList.const_iterator
[       OK ] DoublyLinkedList.const_iterator (0 ms)
[----------] 1 test from DoublyLinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"DoublyLinkedList.const_iterator" end time: Aug 28 11:14 CEST
"DoublyLinkedList.const_iterator" time elapsed: 00:00:00
----------------------------------------------------------

119/154 Testing: DoublyLinkedList.reverse_iterator
119/154 Test: DoublyLinkedList.reverse_iterator
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=DoublyLinkedList.reverse_iterator" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"DoublyLinkedList.reverse_iterator" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = DoublyLinkedList.reverse_iterator
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DoublyLinkedList
[ RUN      ] DoublyLinkedList.reverse_iterator
[       OK ] DoublyLinkedList.reverse_iterator (0 ms)
[----------] 1 test from DoublyLinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"DoublyLinkedList.reverse_iterator" end time: Aug 28 11:14 CEST
"DoublyLinkedList.reverse_iterator" time elapsed: 00:00:00
----------------------------------------------------------

120/154 Testing: DoublyLinkedList.const_reverse_iterator
120/154 Test: DoublyLinkedList.const_reverse_iterator
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=DoublyLinkedList.const_reverse_iterator" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"DoublyLinkedList.const_reverse_iterator" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = DoublyLinkedList.const_reverse_iterator
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DoublyLinkedList
[ RUN      ] DoublyLinkedList.const_reverse_iterator
[       OK ] DoublyLinkedList.const_reverse_iterator (0 ms)
[----------] 1 test from DoublyLinkedList (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"DoublyLinkedList.const_reverse_iterator" end time: Aug 28 11:14 CEST
"DoublyLinkedList.const_reverse_iterator" time elapsed: 00:00:00
----------------------------------------------------------

121/154 Testing: Array.initializeAndRetrieve
121/154 Test: Array.initializeAndRetrieve
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Array.initializeAndRetrieve" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Array.initializeAndRetrieve" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Array.initializeAndRetrieve
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Array
[ RUN      ] Array.initializeAndRetrieve
[       OK ] Array.initializeAndRetrieve (0 ms)
[----------] 1 test from Array (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Array.initializeAndRetrieve" end time: Aug 28 11:14 CEST
"Array.initializeAndRetrieve" time elapsed: 00:00:00
----------------------------------------------------------

122/154 Testing: Array.initializeAndRetrieveConst
122/154 Test: Array.initializeAndRetrieveConst
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Array.initializeAndRetrieveConst" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Array.initializeAndRetrieveConst" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Array.initializeAndRetrieveConst
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Array
[ RUN      ] Array.initializeAndRetrieveConst
[       OK ] Array.initializeAndRetrieveConst (0 ms)
[----------] 1 test from Array (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Array.initializeAndRetrieveConst" end time: Aug 28 11:14 CEST
"Array.initializeAndRetrieveConst" time elapsed: 00:00:00
----------------------------------------------------------

123/154 Testing: Array.write
123/154 Test: Array.write
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Array.write" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Array.write" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Array.write
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Array
[ RUN      ] Array.write
[       OK ] Array.write (0 ms)
[----------] 1 test from Array (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Array.write" end time: Aug 28 11:14 CEST
"Array.write" time elapsed: 00:00:00
----------------------------------------------------------

124/154 Testing: Array.rangeFor
124/154 Test: Array.rangeFor
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Array.rangeFor" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Array.rangeFor" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Array.rangeFor
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Array
[ RUN      ] Array.rangeFor
[       OK ] Array.rangeFor (0 ms)
[----------] 1 test from Array (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Array.rangeFor" end time: Aug 28 11:14 CEST
"Array.rangeFor" time elapsed: 00:00:00
----------------------------------------------------------

125/154 Testing: Array.rangeForConst
125/154 Test: Array.rangeForConst
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Array.rangeForConst" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Array.rangeForConst" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Array.rangeForConst
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Array
[ RUN      ] Array.rangeForConst
[       OK ] Array.rangeForConst (0 ms)
[----------] 1 test from Array (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Array.rangeForConst" end time: Aug 28 11:14 CEST
"Array.rangeForConst" time elapsed: 00:00:00
----------------------------------------------------------

126/154 Testing: Array.equality
126/154 Test: Array.equality
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Array.equality" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Array.equality" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Array.equality
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Array
[ RUN      ] Array.equality
[       OK ] Array.equality (0 ms)
[----------] 1 test from Array (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Array.equality" end time: Aug 28 11:14 CEST
"Array.equality" time elapsed: 00:00:00
----------------------------------------------------------

127/154 Testing: Array2D.initialize
127/154 Test: Array2D.initialize
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Array2D.initialize" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Array2D.initialize" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Array2D.initialize
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Array2D
[ RUN      ] Array2D.initialize
[       OK ] Array2D.initialize (0 ms)
[----------] 1 test from Array2D (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Array2D.initialize" end time: Aug 28 11:14 CEST
"Array2D.initialize" time elapsed: 00:00:00
----------------------------------------------------------

128/154 Testing: generateIncrementalArray.simple
128/154 Test: generateIncrementalArray.simple
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=generateIncrementalArray.simple" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"generateIncrementalArray.simple" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = generateIncrementalArray.simple
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from generateIncrementalArray
[ RUN      ] generateIncrementalArray.simple
[       OK ] generateIncrementalArray.simple (0 ms)
[----------] 1 test from generateIncrementalArray (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"generateIncrementalArray.simple" end time: Aug 28 11:14 CEST
"generateIncrementalArray.simple" time elapsed: 00:00:00
----------------------------------------------------------

129/154 Testing: Button.construct
129/154 Test: Button.construct
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Button.construct" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Button.construct" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Button.construct
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.construct
[       OK ] Button.construct (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.construct" end time: Aug 28 11:14 CEST
"Button.construct" time elapsed: 00:00:00
----------------------------------------------------------

130/154 Testing: Button.released
130/154 Test: Button.released
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Button.released" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Button.released" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Button.released
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.released
[       OK ] Button.released (1 ms)
[----------] 1 test from Button (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.released" end time: Aug 28 11:14 CEST
"Button.released" time elapsed: 00:00:00
----------------------------------------------------------

131/154 Testing: Button.falling
131/154 Test: Button.falling
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Button.falling" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Button.falling" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Button.falling
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.falling
[       OK ] Button.falling (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.falling" end time: Aug 28 11:14 CEST
"Button.falling" time elapsed: 00:00:00
----------------------------------------------------------

132/154 Testing: Button.pressed
132/154 Test: Button.pressed
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Button.pressed" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Button.pressed" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Button.pressed
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.pressed
[       OK ] Button.pressed (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.pressed" end time: Aug 28 11:14 CEST
"Button.pressed" time elapsed: 00:00:00
----------------------------------------------------------

133/154 Testing: Button.rising
133/154 Test: Button.rising
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Button.rising" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Button.rising" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Button.rising
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.rising
[       OK ] Button.rising (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.rising" end time: Aug 28 11:14 CEST
"Button.rising" time elapsed: 00:00:00
----------------------------------------------------------

134/154 Testing: Button.debouncePressed
134/154 Test: Button.debouncePressed
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Button.debouncePressed" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Button.debouncePressed" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Button.debouncePressed
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.debouncePressed
[       OK ] Button.debouncePressed (1 ms)
[----------] 1 test from Button (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.debouncePressed" end time: Aug 28 11:14 CEST
"Button.debouncePressed" time elapsed: 00:00:00
----------------------------------------------------------

135/154 Testing: Button.debounceReleased
135/154 Test: Button.debounceReleased
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Button.debounceReleased" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Button.debounceReleased" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Button.debounceReleased
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Button
[ RUN      ] Button.debounceReleased
[       OK ] Button.debounceReleased (0 ms)
[----------] 1 test from Button (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Button.debounceReleased" end time: Aug 28 11:14 CEST
"Button.debounceReleased" time elapsed: 00:00:00
----------------------------------------------------------

136/154 Testing: ExtendedInputOutput.digitalRead
136/154 Test: ExtendedInputOutput.digitalRead
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=ExtendedInputOutput.digitalRead" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"ExtendedInputOutput.digitalRead" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = ExtendedInputOutput.digitalRead
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ExtendedInputOutput
[ RUN      ] ExtendedInputOutput.digitalRead
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 0
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] ExtendedInputOutput.digitalRead (0 ms)
[----------] 1 test from ExtendedInputOutput (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"ExtendedInputOutput.digitalRead" end time: Aug 28 11:14 CEST
"ExtendedInputOutput.digitalRead" time elapsed: 00:00:00
----------------------------------------------------------

137/154 Testing: ExtendedInputOutput.pinOutOfBoundsGt
137/154 Test: ExtendedInputOutput.pinOutOfBoundsGt
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=ExtendedInputOutput.pinOutOfBoundsGt" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"ExtendedInputOutput.pinOutOfBoundsGt" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = ExtendedInputOutput.pinOutOfBoundsGt
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ExtendedInputOutput
[ RUN      ] ExtendedInputOutput.pinOutOfBoundsGt
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] ExtendedInputOutput.pinOutOfBoundsGt (0 ms)
[----------] 1 test from ExtendedInputOutput (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"ExtendedInputOutput.pinOutOfBoundsGt" end time: Aug 28 11:14 CEST
"ExtendedInputOutput.pinOutOfBoundsGt" time elapsed: 00:00:00
----------------------------------------------------------

138/154 Testing: ExtendedInputOutput.pinOutOfBoundsLt
138/154 Test: ExtendedInputOutput.pinOutOfBoundsLt
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=ExtendedInputOutput.pinOutOfBoundsLt" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"ExtendedInputOutput.pinOutOfBoundsLt" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = ExtendedInputOutput.pinOutOfBoundsLt
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ExtendedInputOutput
[ RUN      ] ExtendedInputOutput.pinOutOfBoundsLt
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] ExtendedInputOutput.pinOutOfBoundsLt (0 ms)
[----------] 1 test from ExtendedInputOutput (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"ExtendedInputOutput.pinOutOfBoundsLt" end time: Aug 28 11:14 CEST
"ExtendedInputOutput.pinOutOfBoundsLt" time elapsed: 00:00:00
----------------------------------------------------------

139/154 Testing: ExtendedInputOutput.nonExistentPin
139/154 Test: ExtendedInputOutput.nonExistentPin
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=ExtendedInputOutput.nonExistentPin" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"ExtendedInputOutput.nonExistentPin" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = ExtendedInputOutput.nonExistentPin
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ExtendedInputOutput
[ RUN      ] ExtendedInputOutput.nonExistentPin
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] ExtendedInputOutput.nonExistentPin (0 ms)
[----------] 1 test from ExtendedInputOutput (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"ExtendedInputOutput.nonExistentPin" end time: Aug 28 11:14 CEST
"ExtendedInputOutput.nonExistentPin" time elapsed: 00:00:00
----------------------------------------------------------

140/154 Testing: ExtendedInputOutput.nonExistentPinOfDeletedElement
140/154 Test: ExtendedInputOutput.nonExistentPinOfDeletedElement
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=ExtendedInputOutput.nonExistentPinOfDeletedElement" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"ExtendedInputOutput.nonExistentPinOfDeletedElement" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = ExtendedInputOutput.nonExistentPinOfDeletedElement
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ExtendedInputOutput
[ RUN      ] ExtendedInputOutput.nonExistentPinOfDeletedElement
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 0
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 0
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] ExtendedInputOutput.nonExistentPinOfDeletedElement (0 ms)
[----------] 1 test from ExtendedInputOutput (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"ExtendedInputOutput.nonExistentPinOfDeletedElement" end time: Aug 28 11:14 CEST
"ExtendedInputOutput.nonExistentPinOfDeletedElement" time elapsed: 00:00:00
----------------------------------------------------------

141/154 Testing: ExtendedInputOutput.outOfPinNumbers
141/154 Test: ExtendedInputOutput.outOfPinNumbers
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=ExtendedInputOutput.outOfPinNumbers" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"ExtendedInputOutput.outOfPinNumbers" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = ExtendedInputOutput.outOfPinNumbers
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ExtendedInputOutput
[ RUN      ] ExtendedInputOutput.outOfPinNumbers
[       OK ] ExtendedInputOutput.outOfPinNumbers (0 ms)
[----------] 1 test from ExtendedInputOutput (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"ExtendedInputOutput.outOfPinNumbers" end time: Aug 28 11:14 CEST
"ExtendedInputOutput.outOfPinNumbers" time elapsed: 00:00:00
----------------------------------------------------------

142/154 Testing: AnalogMultiplex.analogReadNoEnable
142/154 Test: AnalogMultiplex.analogReadNoEnable
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=AnalogMultiplex.analogReadNoEnable" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"AnalogMultiplex.analogReadNoEnable" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = AnalogMultiplex.analogReadNoEnable
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AnalogMultiplex
[ RUN      ] AnalogMultiplex.analogReadNoEnable
[virtual void AnalogMultiplex_analogReadNoEnable_Test::TestBody() @ line 10]:	20
[virtual void AnalogMultiplex_analogReadNoEnable_Test::TestBody() @ line 11]:	36
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] AnalogMultiplex.analogReadNoEnable (0 ms)
[----------] 1 test from AnalogMultiplex (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"AnalogMultiplex.analogReadNoEnable" end time: Aug 28 11:14 CEST
"AnalogMultiplex.analogReadNoEnable" time elapsed: 00:00:00
----------------------------------------------------------

143/154 Testing: AnalogMultiplex.digitalReadNoEnable
143/154 Test: AnalogMultiplex.digitalReadNoEnable
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=AnalogMultiplex.digitalReadNoEnable" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"AnalogMultiplex.digitalReadNoEnable" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = AnalogMultiplex.digitalReadNoEnable
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AnalogMultiplex
[ RUN      ] AnalogMultiplex.digitalReadNoEnable
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] AnalogMultiplex.digitalReadNoEnable (0 ms)
[----------] 1 test from AnalogMultiplex (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"AnalogMultiplex.digitalReadNoEnable" end time: Aug 28 11:14 CEST
"AnalogMultiplex.digitalReadNoEnable" time elapsed: 00:00:00
----------------------------------------------------------

144/154 Testing: AnalogMultiplex.analogReadEnable
144/154 Test: AnalogMultiplex.analogReadEnable
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=AnalogMultiplex.analogReadEnable" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"AnalogMultiplex.analogReadEnable" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = AnalogMultiplex.analogReadEnable
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AnalogMultiplex
[ RUN      ] AnalogMultiplex.analogReadEnable
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] AnalogMultiplex.analogReadEnable (0 ms)
[----------] 1 test from AnalogMultiplex (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"AnalogMultiplex.analogReadEnable" end time: Aug 28 11:14 CEST
"AnalogMultiplex.analogReadEnable" time elapsed: 00:00:00
----------------------------------------------------------

145/154 Testing: AnalogMultiplex.digitalReadEnable
145/154 Test: AnalogMultiplex.digitalReadEnable
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=AnalogMultiplex.digitalReadEnable" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"AnalogMultiplex.digitalReadEnable" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = AnalogMultiplex.digitalReadEnable
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AnalogMultiplex
[ RUN      ] AnalogMultiplex.digitalReadEnable
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] AnalogMultiplex.digitalReadEnable (0 ms)
[----------] 1 test from AnalogMultiplex (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"AnalogMultiplex.digitalReadEnable" end time: Aug 28 11:14 CEST
"AnalogMultiplex.digitalReadEnable" time elapsed: 00:00:00
----------------------------------------------------------

146/154 Testing: OutputBank.OutputBank
146/154 Test: OutputBank.OutputBank
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=OutputBank.OutputBank" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"OutputBank.OutputBank" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = OutputBank.OutputBank
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from OutputBank
[ RUN      ] OutputBank.OutputBank
[       OK ] OutputBank.OutputBank (0 ms)
[----------] 1 test from OutputBank (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"OutputBank.OutputBank" end time: Aug 28 11:14 CEST
"OutputBank.OutputBank" time elapsed: 00:00:00
----------------------------------------------------------

147/154 Testing: OutputBank.initialSetting
147/154 Test: OutputBank.initialSetting
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=OutputBank.initialSetting" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"OutputBank.initialSetting" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = OutputBank.initialSetting
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from OutputBank
[ RUN      ] OutputBank.initialSetting
[       OK ] OutputBank.initialSetting (0 ms)
[----------] 1 test from OutputBank (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"OutputBank.initialSetting" end time: Aug 28 11:14 CEST
"OutputBank.initialSetting" time elapsed: 00:00:00
----------------------------------------------------------

148/154 Testing: OutputBank.noTracks
148/154 Test: OutputBank.noTracks
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=OutputBank.noTracks" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"OutputBank.noTracks" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = OutputBank.noTracks
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from OutputBank
[ RUN      ] OutputBank.noTracks
[       OK ] OutputBank.noTracks (0 ms)
[----------] 1 test from OutputBank (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"OutputBank.noTracks" end time: Aug 28 11:14 CEST
"OutputBank.noTracks" time elapsed: 00:00:00
----------------------------------------------------------

149/154 Testing: OutputBank.select
149/154 Test: OutputBank.select
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=OutputBank.select" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"OutputBank.select" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = OutputBank.select
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from OutputBank
[ RUN      ] OutputBank.select
[       OK ] OutputBank.select (0 ms)
[----------] 1 test from OutputBank (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"OutputBank.select" end time: Aug 28 11:14 CEST
"OutputBank.select" time elapsed: 00:00:00
----------------------------------------------------------

150/154 Testing: Bank.Bank
150/154 Test: Bank.Bank
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Bank.Bank" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Bank.Bank" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Bank.Bank
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Bank
[ RUN      ] Bank.Bank
[       OK ] Bank.Bank (0 ms)
[----------] 1 test from Bank (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Bank.Bank" end time: Aug 28 11:14 CEST
"Bank.Bank" time elapsed: 00:00:00
----------------------------------------------------------

151/154 Testing: Bank.select
151/154 Test: Bank.select
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Bank.select" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Bank.select" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Bank.select
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Bank
[ RUN      ] Bank.select
[       OK ] Bank.select (0 ms)
[----------] 1 test from Bank (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Bank.select" end time: Aug 28 11:14 CEST
"Bank.select" time elapsed: 00:00:00
----------------------------------------------------------

152/154 Testing: Bank.selectOutOfBounds
152/154 Test: Bank.selectOutOfBounds
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Bank.selectOutOfBounds" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Bank.selectOutOfBounds" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Bank.selectOutOfBounds
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Bank
[ RUN      ] Bank.selectOutOfBounds
[       OK ] Bank.selectOutOfBounds (0 ms)
[----------] 1 test from Bank (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Bank.selectOutOfBounds" end time: Aug 28 11:14 CEST
"Bank.selectOutOfBounds" time elapsed: 00:00:00
----------------------------------------------------------

153/154 Testing: Bank.onBankSettingChange
153/154 Test: Bank.onBankSettingChange
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests" "--gtest_filter=Bank.onBankSettingChange" "--gtest_also_run_disabled_tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Bank.onBankSettingChange" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
Note: Google Test filter = Bank.onBankSettingChange
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Bank
[ RUN      ] Bank.onBankSettingChange
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 36]:	(node == first) = 0
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 37]:	(node == last) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 36]:	(node == first) = 0
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 37]:	(node == last) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 37]:	(node == last) = 1
[       OK ] Bank.onBankSettingChange (0 ms)
[----------] 1 test from Bank (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"Bank.onBankSettingChange" end time: Aug 28 11:14 CEST
"Bank.onBankSettingChange" time elapsed: 00:00:00
----------------------------------------------------------

154/154 Testing: Tests
154/154 Test: Tests
Command: "/home/pieter/GitHub/Control-Surface/build/bin/tests"
Directory: /home/pieter/GitHub/Control-Surface/build
"Tests" start time: Aug 28 11:14 CEST
Output:
----------------------------------------------------------
[==========] Running 153 tests from 37 test cases.
[----------] Global test environment set-up.
[----------] 1 test from millis
[ RUN      ] millis.millis
[       OK ] millis.millis (0 ms)
[----------] 1 test from millis (0 ms total)

[----------] 4 tests from Serial
[ RUN      ] Serial.write_byte
[       OK ] Serial.write_byte (0 ms)
[ RUN      ] Serial.write_bytes
[       OK ] Serial.write_bytes (0 ms)
[ RUN      ] Serial.print_string
[       OK ] Serial.print_string (0 ms)
[ RUN      ] Serial.println_string
[       OK ] Serial.println_string (0 ms)
[----------] 4 tests from Serial (0 ms total)

[----------] 2 tests from Error
[ RUN      ] Error.exception
[       OK ] Error.exception (1 ms)
[ RUN      ] Error.exceptionWhatErrorCode
[virtual void Error_exceptionWhatErrorCode_Test::TestBody() @ line 67]:	An error occured
[       OK ] Error.exceptionWhatErrorCode (0 ms)
[----------] 2 tests from Error (1 ms total)

[----------] 1 test from ManyButtonsSelector
[ RUN      ] ManyButtonsSelector.press
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] ManyButtonsSelector.press (0 ms)
[----------] 1 test from ManyButtonsSelector (0 ms total)

[----------] 2 tests from IncrementSelector
[ RUN      ] IncrementSelector.pressWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementSelector.pressWrap (0 ms)
[ RUN      ] IncrementSelector.pressNoWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementSelector.pressNoWrap (0 ms)
[----------] 2 tests from IncrementSelector (0 ms total)

[----------] 5 tests from IncrementDecrementSelector
[ RUN      ] IncrementDecrementSelector.pressIncrementWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementDecrementSelector.pressIncrementWrap (0 ms)
[ RUN      ] IncrementDecrementSelector.pressDecrementWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementDecrementSelector.pressDecrementWrap (0 ms)
[ RUN      ] IncrementDecrementSelector.reset
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementDecrementSelector.reset (0 ms)
[ RUN      ] IncrementDecrementSelector.pressIncrementNoWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementDecrementSelector.pressIncrementNoWrap (0 ms)
[ RUN      ] IncrementDecrementSelector.pressDecrementNoWrap
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] IncrementDecrementSelector.pressDecrementNoWrap (1 ms)
[----------] 5 tests from IncrementDecrementSelector (1 ms total)

[----------] 13 tests from USBMIDIParser
[ RUN      ] USBMIDIParser.noteOff
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	8 82 20 7f
[       OK ] USBMIDIParser.noteOff (0 ms)
[ RUN      ] USBMIDIParser.noteOn
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	9 93 2a 7e
[       OK ] USBMIDIParser.noteOn (0 ms)
[ RUN      ] USBMIDIParser.sysEx2Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 f0 f7 0
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: f7	SysExLength = 2
End SysEx
[       OK ] USBMIDIParser.sysEx2Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx3Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 f0 10 f7
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 10	SysExLength = 2
SysEx data byte: f7	SysExLength = 3
End SysEx
[       OK ] USBMIDIParser.sysEx3Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx4Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 11 12
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 11	SysExLength = 2
SysEx data byte: 12	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
SysEx data byte: f7	SysExLength = 4
End SysEx
[       OK ] USBMIDIParser.sysEx4Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx5Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 21 22
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 21	SysExLength = 2
SysEx data byte: 22	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 23 f7 0
SysEx data byte: 23	SysExLength = 4
SysEx data byte: f7	SysExLength = 5
End SysEx
[       OK ] USBMIDIParser.sysEx5Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx6Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 31 32
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 31	SysExLength = 2
SysEx data byte: 32	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 33 34 f7
SysEx data byte: 33	SysExLength = 4
SysEx data byte: 34	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
End SysEx
[       OK ] USBMIDIParser.sysEx6Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx7Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 41 42
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 41	SysExLength = 2
SysEx data byte: 42	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 43 44 45
SysEx data byte: 43	SysExLength = 4
SysEx data byte: 44	SysExLength = 5
SysEx data byte: 45	SysExLength = 6
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
SysEx data byte: f7	SysExLength = 7
End SysEx
[       OK ] USBMIDIParser.sysEx7Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysEx12Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 f0 51 52
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 51	SysExLength = 2
SysEx data byte: 52	SysExLength = 3
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 53 54 55
SysEx data byte: 53	SysExLength = 4
SysEx data byte: 54	SysExLength = 5
SysEx data byte: 55	SysExLength = 6
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	4 56 57 58
SysEx data byte: 56	SysExLength = 7
SysEx data byte: 57	SysExLength = 8
SysEx data byte: 58	SysExLength = 9
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 59 5a f7
SysEx data byte: 59	SysExLength = 10
SysEx data byte: 5a	SysExLength = 11
SysEx data byte: f7	SysExLength = 12
End SysEx
[       OK ] USBMIDIParser.sysEx12Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysExContinueWithoutStarting
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 33 34 f7
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 79]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExContinueWithoutStarting (0 ms)
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting1Byte
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	5 f7 0 0
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 43]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting1Byte (0 ms)
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting2Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	6 10 f7 0
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 60]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting2Bytes (0 ms)
[ RUN      ] USBMIDIParser.sysExEndsWithoutStarting3Bytes
[/home/pieter/GitHub/Control-Surface/src/MIDI_Parsers/USBMIDI_Parser.cpp:8]:	MIDIUSB packet:	7 10 11 f7
[MIDI_read_t USBMIDI_Parser::parse(uint8_t*) @ line 79]:	Error: No SysExStart received
[       OK ] USBMIDIParser.sysExEndsWithoutStarting3Bytes (0 ms)
[----------] 13 tests from USBMIDIParser (0 ms total)

[----------] 15 tests from SerialMIDIParser
[ RUN      ] SerialMIDIParser.noteOff
[       OK ] SerialMIDIParser.noteOff (0 ms)
[ RUN      ] SerialMIDIParser.noteOn
[       OK ] SerialMIDIParser.noteOn (0 ms)
[ RUN      ] SerialMIDIParser.noteOnRunningStatus
[       OK ] SerialMIDIParser.noteOnRunningStatus (0 ms)
[ RUN      ] SerialMIDIParser.afterTouch
[       OK ] SerialMIDIParser.afterTouch (0 ms)
[ RUN      ] SerialMIDIParser.controlChange
[       OK ] SerialMIDIParser.controlChange (0 ms)
[ RUN      ] SerialMIDIParser.programChange
[       OK ] SerialMIDIParser.programChange (0 ms)
[ RUN      ] SerialMIDIParser.programChangeRunningStatus
[       OK ] SerialMIDIParser.programChangeRunningStatus (0 ms)
[ RUN      ] SerialMIDIParser.channelPressure
[       OK ] SerialMIDIParser.channelPressure (0 ms)
[ RUN      ] SerialMIDIParser.pitchBend
[       OK ] SerialMIDIParser.pitchBend (0 ms)
[ RUN      ] SerialMIDIParser.sysEx2Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: f7	SysExLength = 2
[       OK ] SerialMIDIParser.sysEx2Bytes (0 ms)
[ RUN      ] SerialMIDIParser.sysEx3Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 10	SysExLength = 2
SysEx data byte: f7	SysExLength = 3
[       OK ] SerialMIDIParser.sysEx3Bytes (0 ms)
[ RUN      ] SerialMIDIParser.sysEx7Bytes
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 41	SysExLength = 2
SysEx data byte: 42	SysExLength = 3
SysEx data byte: 43	SysExLength = 4
SysEx data byte: 44	SysExLength = 5
SysEx data byte: 45	SysExLength = 6
SysEx data byte: f7	SysExLength = 7
[       OK ] SerialMIDIParser.sysEx7Bytes (0 ms)
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting1Byte
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting1Byte (0 ms)
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting2Bytes
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 58]:	Data byte ignored
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting2Bytes (0 ms)
[ RUN      ] SerialMIDIParser.sysExEndsWithoutStarting3Bytes
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 58]:	Data byte ignored
[MIDI_read_t SerialMIDI_Parser::parse(uint8_t) @ line 58]:	Data byte ignored
[       OK ] SerialMIDIParser.sysExEndsWithoutStarting3Bytes (0 ms)
[----------] 15 tests from SerialMIDIParser (0 ms total)

[----------] 1 test from NoteButtonMatrix
[ RUN      ] NoteButtonMatrix.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonMatrix.pressAndRelease (0 ms)
[----------] 1 test from NoteButtonMatrix (0 ms total)

[----------] 1 test from NoteButtonMatrixBankable
[ RUN      ] NoteButtonMatrixBankable.pressChangeSettingRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonMatrixBankable.pressChangeSettingRelease (0 ms)
[----------] 1 test from NoteButtonMatrixBankable (0 ms total)

[----------] 1 test from NoteButtonLatching
[ RUN      ] NoteButtonLatching.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonLatching.pressAndRelease (0 ms)
[----------] 1 test from NoteButtonLatching (0 ms total)

[----------] 3 tests from NoteButtonLatchingBankable
[ RUN      ] NoteButtonLatchingBankable.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonLatchingBankable.pressAndRelease (1 ms)
[ RUN      ] NoteButtonLatchingBankable.changeSettingAndPressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonLatchingBankable.changeSettingAndPressAndRelease (0 ms)
[ RUN      ] NoteButtonLatchingBankable.pressAndChangeSettingAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonLatchingBankable.pressAndChangeSettingAndRelease (0 ms)
[----------] 3 tests from NoteButtonLatchingBankable (1 ms total)

[----------] 1 test from NoteButton
[ RUN      ] NoteButton.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButton.pressAndRelease (0 ms)
[----------] 1 test from NoteButton (0 ms total)

[----------] 3 tests from NoteButtonBankable
[ RUN      ] NoteButtonBankable.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonBankable.pressAndRelease (0 ms)
[ RUN      ] NoteButtonBankable.changeSettingAndPressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonBankable.changeSettingAndPressAndRelease (0 ms)
[ RUN      ] NoteButtonBankable.pressAndChangeSettingAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] NoteButtonBankable.pressAndChangeSettingAndRelease (0 ms)
[----------] 3 tests from NoteButtonBankable (0 ms total)

[----------] 5 tests from CCRotaryEncoder
[ RUN      ] CCRotaryEncoder.turnOneStep
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoder.turnOneStep (0 ms)
[ RUN      ] CCRotaryEncoder.turnFourHalfSteps
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoder.turnFourHalfSteps (0 ms)
[ RUN      ] CCRotaryEncoder.turnOneStepBackwards
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoder.turnOneStepBackwards (0 ms)
[ RUN      ] CCRotaryEncoder.turnSixteenSteps
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoder.turnSixteenSteps (0 ms)
[ RUN      ] CCRotaryEncoder.turnSixteenStepsBackwards
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoder.turnSixteenStepsBackwards (0 ms)
[----------] 5 tests from CCRotaryEncoder (0 ms total)

[----------] 1 test from CCRotaryEncoderBankable
[ RUN      ] CCRotaryEncoderBankable.turnOneStepChangeSettingTurnOneStep
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCRotaryEncoderBankable.turnOneStepChangeSettingTurnOneStep (0 ms)
[----------] 1 test from CCRotaryEncoderBankable (0 ms total)

[----------] 1 test from CCButton
[ RUN      ] CCButton.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButton.pressAndRelease (1 ms)
[----------] 1 test from CCButton (1 ms total)

[----------] 3 tests from CCButtonBankable
[ RUN      ] CCButtonBankable.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtonBankable.pressAndRelease (0 ms)
[ RUN      ] CCButtonBankable.changeSettingAndPressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtonBankable.changeSettingAndPressAndRelease (0 ms)
[ RUN      ] CCButtonBankable.pressAndChangeSettingAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtonBankable.pressAndChangeSettingAndRelease (0 ms)
[----------] 3 tests from CCButtonBankable (0 ms total)

[----------] 1 test from CCButtons
[ RUN      ] CCButtons.pressAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtons.pressAndRelease (0 ms)
[----------] 1 test from CCButtons (0 ms total)

[----------] 2 tests from CCButtonsBankable
[ RUN      ] CCButtonsBankable.pressChangeBankAndRelease
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtonsBankable.pressChangeBankAndRelease (0 ms)
[ RUN      ] CCButtonsBankable.pressChangeBankAndReleaseAndPress
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = Updatable] @ line 37]:	(node == last) = 1
[       OK ] CCButtonsBankable.pressChangeBankAndReleaseAndPress (1 ms)
[----------] 2 tests from CCButtonsBankable (1 ms total)

[----------] 10 tests from BluetoothMIDIInterface
[ RUN      ] BluetoothMIDIInterface.initializeBegin
[       OK ] BluetoothMIDIInterface.initializeBegin (0 ms)
[ RUN      ] BluetoothMIDIInterface.receiveChannelMessage
[       OK ] BluetoothMIDIInterface.receiveChannelMessage (0 ms)
[ RUN      ] BluetoothMIDIInterface.receiveMultipleChannelMessage
[       OK ] BluetoothMIDIInterface.receiveMultipleChannelMessage (0 ms)
[ RUN      ] BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatus
[       OK ] BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatus (0 ms)
[ RUN      ] BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatusRealTime
[       OK ] BluetoothMIDIInterface.receiveMultipleChannelMessageRunningStatusRealTime (0 ms)
[ RUN      ] BluetoothMIDIInterface.receiveMultipleTwoByteChannelMessage
[       OK ] BluetoothMIDIInterface.receiveMultipleTwoByteChannelMessage (0 ms)
[ RUN      ] BluetoothMIDIInterface.receiveSysEx
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 1	SysExLength = 2
SysEx data byte: 2	SysExLength = 3
SysEx data byte: 3	SysExLength = 4
SysEx data byte: 4	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
[       OK ] BluetoothMIDIInterface.receiveSysEx (0 ms)
[ RUN      ] BluetoothMIDIInterface.receiveSysEx2
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 1	SysExLength = 2
SysEx data byte: 2	SysExLength = 3
SysEx data byte: 3	SysExLength = 4
SysEx data byte: 4	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
[       OK ] BluetoothMIDIInterface.receiveSysEx2 (0 ms)
[ RUN      ] BluetoothMIDIInterface.receiveSysExSplitAcrossPackets
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 1	SysExLength = 2
SysEx data byte: 2	SysExLength = 3
SysEx data byte: 3	SysExLength = 4
SysEx data byte: 4	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
[       OK ] BluetoothMIDIInterface.receiveSysExSplitAcrossPackets (0 ms)
[ RUN      ] BluetoothMIDIInterface.receiveSysExAndRealTime
Start SysEx
SysEx data byte: f0	SysExLength = 1
SysEx data byte: 1	SysExLength = 2
SysEx data byte: 2	SysExLength = 3
SysEx data byte: 3	SysExLength = 4
SysEx data byte: 4	SysExLength = 5
SysEx data byte: f7	SysExLength = 6
[       OK ] BluetoothMIDIInterface.receiveSysExAndRealTime (0 ms)
[----------] 10 tests from BluetoothMIDIInterface (0 ms total)

[----------] 5 tests from MCUVU
[ RUN      ] MCUVU.setValue
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[       OK ] MCUVU.setValue (0 ms)
[ RUN      ] MCUVU.setOverload
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 5
[       OK ] MCUVU.setOverload (0 ms)
[ RUN      ] MCUVU.clearOverload
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[       OK ] MCUVU.clearOverload (0 ms)
[ RUN      ] MCUVU.retainValueAfterOverload
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[       OK ] MCUVU.retainValueAfterOverload (0 ms)
[ RUN      ] MCUVU.decay
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[virtual bool MCU::VU::updateImpl(const MIDI_message_matcher&) @ line 128]:	target track = 4
[       OK ] MCUVU.decay (0 ms)
[----------] 5 tests from MCUVU (0 ms total)

[----------] 3 tests from MCUVUBankable
[ RUN      ] MCUVUBankable.setValueBankChangeAddress
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 2ul] @ line 202]:	target track = 8
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 47]:	target address = 8, base address = 4, number of banks = 
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 37]:	(node == last) = 1
[       OK ] MCUVUBankable.setValueBankChangeAddress (0 ms)
[ RUN      ] MCUVUBankable.setValueBankChangeChannel
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 3u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 3ul] @ line 202]:	target track = 4
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 3u; uint8_t = unsigned char] @ line 47]:	target address = 4, base address = 4, number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 3u; uint8_t = unsigned char] @ line 59]:	target channel = 
, base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 3ul] @ line 202]:	target track = 4
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 3u; uint8_t = unsigned char] @ line 47]:	target address = 4, base address = 4, number of banks = 
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<3u>] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<3u>] @ line 37]:	(node == last) = 1
[       OK ] MCUVUBankable.setValueBankChangeChannel (0 ms)
[ RUN      ] MCUVUBankable.overloadBankChangeAddress
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 2ul] @ line 202]:	target track = 8
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 47]:	target address = 8, base address = 4, number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 2ul] @ line 202]:	target track = 8
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 47]:	target address = 8, base address = 4, number of banks = 
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 37]:	(node == last) = 1
[       OK ] MCUVUBankable.overloadBankChangeAddress (0 ms)
[----------] 3 tests from MCUVUBankable (0 ms total)

[----------] 1 test from MCUVULEDsBankable
[ RUN      ] MCUVULEDsBankable.displayOnBankChange
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 2ul] @ line 202]:	target track = 4
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 47]:	target address = 4, base address = 4, number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 42]:	
[bool BankableMIDIInputAddressable<N>::matchChannel(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 59]:	target channel = , base channel = , number of banks = 
[bool MIDIInputElement::updateWith(const MIDI_message_matcher&) @ line 45]:	Channel matched
[bool MCU::Bankable::VU<N>::updateImpl(const MIDI_message_matcher&) [with long unsigned int N = 2ul] @ line 202]:	target track = 8
[bool BankableMIDIInputAddressable<N>::matchAddress(uint8_t, uint8_t) const [with unsigned char N = 2u; uint8_t = unsigned char] @ line 47]:	target address = 8, base address = 4, number of banks = 
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<2u>] @ line 37]:	(node == last) = 1
[       OK ] MCUVULEDsBankable.displayOnBankChange (0 ms)
[----------] 1 test from MCUVULEDsBankable (0 ms total)

[----------] 13 tests from MCUTimeDisplay
[ RUN      ] MCUTimeDisplay.setFirstLetter
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.setFirstLetter (0 ms)
[ RUN      ] MCUTimeDisplay.getTextFull
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextFull (0 ms)
[ RUN      ] MCUTimeDisplay.getTextOffset
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextOffset (0 ms)
[ RUN      ] MCUTimeDisplay.getTextOffsetLength
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextOffsetLength (0 ms)
[ RUN      ] MCUTimeDisplay.getTextOffsetLast
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextOffsetLast (0 ms)
[ RUN      ] MCUTimeDisplay.getTextOffsetTooBig
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		A 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextOffsetTooBig (0 ms)
[ RUN      ] MCUTimeDisplay.getTextLengthTooBig
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		B 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getTextLengthTooBig (0 ms)
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFrames1Digit
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	9 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	0 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	3 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	5 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	6 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		7 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFrames1Digit (0 ms)
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFrames2Digits
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	8 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	9 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	0 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	3 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	5 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	6 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		7 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFrames2Digits (0 ms)
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFrames3Digits
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	1 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	8 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	9 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	0 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	3 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	5 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	6 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		7 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFrames3Digits (0 ms)
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFrames4Digits
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	2 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	5 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	9 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	3 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	0 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	1 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	7 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		6 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFrames4Digits (0 ms)
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFrames5Digits
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	4 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	5 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	8 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	2 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	6 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	0 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	2 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		9 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFrames5Digits (0 ms)
[ RUN      ] MCUTimeDisplay.getBarsGetBeatsGetFramesSpacesOnly
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:
	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:	  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 38]:	
[virtual bool MIDIInputElementAddressable::matchChannel(uint8_t) const @ line 85]:	target channel = , base channel = 
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 41]:	MIDI message matches
[/home/pieter/GitHub/Control-Surface/build/../src/MIDI_Inputs/MCU/SevenSegmentDisplay.hpp:38]:		Character @@:		  
[bool MIDIInputElementAddressable::updateWith(const MIDI_message_matcher&) @ line 44]:	Updated
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = MIDIInputElementCC] @ line 37]:	(node == last) = 1
[       OK ] MCUTimeDisplay.getBarsGetBeatsGetFramesSpacesOnly (0 ms)
[----------] 13 tests from MCUTimeDisplay (0 ms total)

[----------] 15 tests from LinkedList
[ RUN      ] LinkedList.insertNode
[       OK ] LinkedList.insertNode (0 ms)
[ RUN      ] LinkedList.loopForward
[       OK ] LinkedList.loopForward (0 ms)
[ RUN      ] LinkedList.loopReversed
[       OK ] LinkedList.loopReversed (0 ms)
[ RUN      ] LinkedList.deleteNode
[       OK ] LinkedList.deleteNode (0 ms)
[ RUN      ] LinkedList.deleteFirstNode
[       OK ] LinkedList.deleteFirstNode (0 ms)
[ RUN      ] LinkedList.deleteLastNode
[       OK ] LinkedList.deleteLastNode (0 ms)
[ RUN      ] LinkedList.moveDownNode
[       OK ] LinkedList.moveDownNode (0 ms)
[ RUN      ] LinkedList.moveDownFirstNode
[       OK ] LinkedList.moveDownFirstNode (0 ms)
[ RUN      ] LinkedList.moveDownSecondNode
[       OK ] LinkedList.moveDownSecondNode (0 ms)
[ RUN      ] LinkedList.moveDownLastNode
[       OK ] LinkedList.moveDownLastNode (0 ms)
[ RUN      ] LinkedList.moveDownOnlyElement
[       OK ] LinkedList.moveDownOnlyElement (0 ms)
[ RUN      ] LinkedList.containsInsert
[       OK ] LinkedList.containsInsert (0 ms)
[ RUN      ] LinkedList.containsDeleteFirst
[       OK ] LinkedList.containsDeleteFirst (0 ms)
[ RUN      ] LinkedList.containsDeleteMiddle
[       OK ] LinkedList.containsDeleteMiddle (0 ms)
[ RUN      ] LinkedList.containsDeleteLast
[       OK ] LinkedList.containsDeleteLast (0 ms)
[----------] 15 tests from LinkedList (1 ms total)

[----------] 2 tests from BitArray
[ RUN      ] BitArray.construct
[       OK ] BitArray.construct (0 ms)
[ RUN      ] BitArray.setClearGet
[       OK ] BitArray.setClearGet (0 ms)
[----------] 2 tests from BitArray (0 ms total)

[----------] 1 test from EMA
[ RUN      ] EMA.overflow
[       OK ] EMA.overflow (0 ms)
[----------] 1 test from EMA (0 ms total)

[----------] 4 tests from DoublyLinkedList
[ RUN      ] DoublyLinkedList.iterator
[       OK ] DoublyLinkedList.iterator (0 ms)
[ RUN      ] DoublyLinkedList.const_iterator
[       OK ] DoublyLinkedList.const_iterator (0 ms)
[ RUN      ] DoublyLinkedList.reverse_iterator
[       OK ] DoublyLinkedList.reverse_iterator (0 ms)
[ RUN      ] DoublyLinkedList.const_reverse_iterator
[       OK ] DoublyLinkedList.const_reverse_iterator (0 ms)
[----------] 4 tests from DoublyLinkedList (0 ms total)

[----------] 6 tests from Array
[ RUN      ] Array.initializeAndRetrieve
[       OK ] Array.initializeAndRetrieve (0 ms)
[ RUN      ] Array.initializeAndRetrieveConst
[       OK ] Array.initializeAndRetrieveConst (0 ms)
[ RUN      ] Array.write
[       OK ] Array.write (0 ms)
[ RUN      ] Array.rangeFor
[       OK ] Array.rangeFor (0 ms)
[ RUN      ] Array.rangeForConst
[       OK ] Array.rangeForConst (0 ms)
[ RUN      ] Array.equality
[       OK ] Array.equality (0 ms)
[----------] 6 tests from Array (0 ms total)

[----------] 1 test from Array2D
[ RUN      ] Array2D.initialize
[       OK ] Array2D.initialize (0 ms)
[----------] 1 test from Array2D (0 ms total)

[----------] 1 test from generateIncrementalArray
[ RUN      ] generateIncrementalArray.simple
[       OK ] generateIncrementalArray.simple (0 ms)
[----------] 1 test from generateIncrementalArray (0 ms total)

[----------] 7 tests from Button
[ RUN      ] Button.construct
[       OK ] Button.construct (0 ms)
[ RUN      ] Button.released
[       OK ] Button.released (0 ms)
[ RUN      ] Button.falling
[       OK ] Button.falling (0 ms)
[ RUN      ] Button.pressed
[       OK ] Button.pressed (0 ms)
[ RUN      ] Button.rising
[       OK ] Button.rising (0 ms)
[ RUN      ] Button.debouncePressed
[       OK ] Button.debouncePressed (0 ms)
[ RUN      ] Button.debounceReleased
[       OK ] Button.debounceReleased (0 ms)
[----------] 7 tests from Button (0 ms total)

[----------] 6 tests from ExtendedInputOutput
[ RUN      ] ExtendedInputOutput.digitalRead
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 0
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] ExtendedInputOutput.digitalRead (0 ms)
[ RUN      ] ExtendedInputOutput.pinOutOfBoundsGt
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] ExtendedInputOutput.pinOutOfBoundsGt (0 ms)
[ RUN      ] ExtendedInputOutput.pinOutOfBoundsLt
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] ExtendedInputOutput.pinOutOfBoundsLt (0 ms)
[ RUN      ] ExtendedInputOutput.nonExistentPin
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] ExtendedInputOutput.nonExistentPin (0 ms)
[ RUN      ] ExtendedInputOutput.nonExistentPinOfDeletedElement
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 0
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 0
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] ExtendedInputOutput.nonExistentPinOfDeletedElement (0 ms)
[ RUN      ] ExtendedInputOutput.outOfPinNumbers
[       OK ] ExtendedInputOutput.outOfPinNumbers (0 ms)
[----------] 6 tests from ExtendedInputOutput (0 ms total)

[----------] 4 tests from AnalogMultiplex
[ RUN      ] AnalogMultiplex.analogReadNoEnable
[virtual void AnalogMultiplex_analogReadNoEnable_Test::TestBody() @ line 10]:	100
[virtual void AnalogMultiplex_analogReadNoEnable_Test::TestBody() @ line 11]:	116
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] AnalogMultiplex.analogReadNoEnable (0 ms)
[ RUN      ] AnalogMultiplex.digitalReadNoEnable
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] AnalogMultiplex.digitalReadNoEnable (0 ms)
[ RUN      ] AnalogMultiplex.analogReadEnable
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] AnalogMultiplex.analogReadEnable (0 ms)
[ RUN      ] AnalogMultiplex.digitalReadEnable
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = ExtendedIOElement] @ line 37]:	(node == last) = 1
[       OK ] AnalogMultiplex.digitalReadEnable (1 ms)
[----------] 4 tests from AnalogMultiplex (1 ms total)

[----------] 4 tests from OutputBank
[ RUN      ] OutputBank.OutputBank
[       OK ] OutputBank.OutputBank (0 ms)
[ RUN      ] OutputBank.initialSetting
[       OK ] OutputBank.initialSetting (0 ms)
[ RUN      ] OutputBank.noTracks
[       OK ] OutputBank.noTracks (0 ms)
[ RUN      ] OutputBank.select
[       OK ] OutputBank.select (0 ms)
[----------] 4 tests from OutputBank (0 ms total)

[----------] 4 tests from Bank
[ RUN      ] Bank.Bank
[       OK ] Bank.Bank (0 ms)
[ RUN      ] Bank.select
[       OK ] Bank.select (0 ms)
[ RUN      ] Bank.selectOutOfBounds
[       OK ] Bank.selectOutOfBounds (0 ms)
[ RUN      ] Bank.onBankSettingChange
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 36]:	(node == first) = 0
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 37]:	(node == last) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 36]:	(node == first) = 0
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 37]:	(node == last) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 36]:	(node == first) = 1
[void DoublyLinkedList<Node>::remove(Node*) [with Node = BankableMIDIInputAddressable<10u>] @ line 37]:	(node == last) = 1
[       OK ] Bank.onBankSettingChange (0 ms)
[----------] 4 tests from Bank (0 ms total)

[----------] Global test environment tear-down
[==========] 153 tests from 37 test cases ran. (7 ms total)
[  PASSED  ] 153 tests.
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"Tests" end time: Aug 28 11:14 CEST
"Tests" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Aug 28 11:14 CEST
